FUNCTION,WCC PLAIN,WCC QUANTIZED,CRAP,SKUNK,IGNORED,IS COMPLEX,FUNCTION PATH
aes.rs,19.718,0.493,54.527,33.379,false,true,src/aes.rs
"ecb_encryptor (26, 53)",0.000,0.000,20.000,16.000,false,false,"/ecb_encryptor (26,53)"
"ecb_encryptor (57, 78)",0.000,0.000,2.000,4.000,false,false,"/ecb_encryptor (57,78)"
"ecb_decryptor (82, 109)",0.000,0.000,20.000,16.000,false,false,"/ecb_decryptor (82,109)"
"ecb_decryptor (113, 134)",0.000,0.000,2.000,4.000,false,false,"/ecb_decryptor (113,134)"
"cbc_encryptor (138, 166)",0.000,0.000,20.000,16.000,false,false,"/cbc_encryptor (138,166)"
"cbc_encryptor (170, 192)",0.000,0.000,2.000,4.000,false,false,"/cbc_encryptor (170,192)"
"cbc_decryptor (196, 224)",0.000,0.000,20.000,16.000,false,false,"/cbc_decryptor (196,224)"
"cbc_decryptor (228, 250)",0.000,0.000,2.000,4.000,false,false,"/cbc_decryptor (228,250)"
"ctr (254, 281)",1.286,0.321,6.333,8.421,false,false,"/ctr (254,281)"
"ctr (285, 306)",0.000,0.000,2.000,4.000,false,false,"/ctr (285,306)"
"tests128 (335, 368)",0.000,1.000,0.000,0.000,false,false,"/tests128 (335,368)"
"tests192 (370, 403)",0.000,1.000,0.000,0.000,false,false,"/tests192 (370,403)"
"tests256 (405, 440)",0.000,1.000,0.000,0.000,false,false,"/tests256 (405,440)"
"aes_ctr_tests (449, 463)",0.000,1.000,0.000,0.000,false,false,"/aes_ctr_tests (449,463)"
"run_test (465, 473)",0.889,0.889,1.000,0.000,false,false,"/run_test (465,473)"
"test_aesni_128 (477, 486)",2.700,0.900,3.009,1.200,false,false,"/test_aesni_128 (477,486)"
"test_aesni_192 (490, 499)",2.700,0.900,3.009,1.200,false,false,"/test_aesni_192 (490,499)"
"test_aesni_256 (503, 512)",2.700,0.900,3.009,1.200,false,false,"/test_aesni_256 (503,512)"
"test_aessafe_128 (515, 522)",1.000,1.000,1.000,0.000,false,false,"/test_aessafe_128 (515,522)"
"test_aessafe_192 (525, 532)",1.000,1.000,1.000,0.000,false,false,"/test_aessafe_192 (525,532)"
"test_aessafe_256 (535, 542)",1.000,1.000,1.000,0.000,false,false,"/test_aessafe_256 (535,542)"
"test_aessafe_128_x8 (547, 593)",0.000,1.022,0.000,0.000,false,false,"/test_aessafe_128_x8 (547,593)"
"test_aessafe_192_x8 (596, 642)",0.000,1.022,0.000,0.000,false,false,"/test_aessafe_192_x8 (596,642)"
"test_aessafe_256_x8 (645, 693)",0.000,1.021,0.000,0.000,false,false,"/test_aessafe_256_x8 (645,693)"
"aes_ctr_box (696, 705)",0.900,0.900,1.000,0.000,false,false,"/aes_ctr_box (696,705)"
"aesni_128_bench (722, 724)",0.000,0.000,0.000,0.000,false,false,"/aesni_128_bench (722,724)"
"aesni_192_bench (728, 730)",0.000,0.000,0.000,0.000,false,false,"/aesni_192_bench (728,730)"
"aesni_256_bench (734, 736)",0.000,0.000,0.000,0.000,false,false,"/aesni_256_bench (734,736)"
"aesni_bench (739, 754)",0.000,0.000,2.000,4.000,false,false,"/aesni_bench (739,754)"
"aes_safe_bench (757, 770)",0.000,0.000,0.000,0.000,false,false,"/aes_safe_bench (757,770)"
"aes_safe_x8_bench (773, 786)",0.000,0.000,0.000,0.000,false,false,"/aes_safe_x8_bench (773,786)"
"<anonymous> (781, 783)",0.000,0.000,0.000,0.000,false,false,"/aes_safe_x8_bench (773,786)/<anonymous> (781,783)"
"<anonymous> (765, 767)",0.000,0.000,0.000,0.000,false,false,"/aes_safe_bench (757,770)/<anonymous> (765,767)"
"<anonymous> (748, 750)",0.000,0.000,0.000,0.000,false,false,"/aesni_bench (739,754)/<anonymous> (748,750)"
aes_gcm.rs,7.664,0.590,13.002,1.130,false,false,src/aes_gcm.rs
"hex_to_bytes (93, 95)",0.000,1.000,0.000,0.000,false,false,"/hex_to_bytes (93,95)"
"get_test_vectors (105, 148)",0.000,1.000,0.000,0.000,false,false,"/get_test_vectors (105,148)"
"aes_gcm_test (150, 168)",2.812,0.938,3.002,0.750,false,false,"/aes_gcm_test (150,168)"
"aes_gcm_decrypt_test (171, 187)",2.600,0.867,3.003,0.857,false,false,"/aes_gcm_decrypt_test (171,187)"
"aes_gcm_decrypt_fail_test (189, 206)",2.471,0.824,3.003,0.800,false,false,"/aes_gcm_decrypt_fail_test (189,206)"
"gsm_10 (218, 233)",0.000,0.000,0.000,0.000,false,false,"/gsm_10 (218,233)"
"gsm_1k (237, 253)",0.000,0.000,0.000,0.000,false,false,"/gsm_1k (237,253)"
"gsm_64k (256, 273)",0.000,0.000,0.000,0.000,false,false,"/gsm_64k (256,273)"
"<anonymous> (259, 270)",0.000,0.000,0.000,0.000,false,false,"/gsm_64k (256,273)/<anonymous> (259,270)"
"<anonymous> (240, 250)",0.000,0.000,0.000,0.000,false,false,"/gsm_1k (237,253)/<anonymous> (240,250)"
"<anonymous> (221, 231)",0.000,0.000,0.000,0.000,false,false,"/gsm_10 (218,233)/<anonymous> (221,231)"
"decrypt (69, 83)",2.600,0.867,3.000,0.000,false,false,"/AesGcm<'static> (68,84)/decrypt (69,83)"
"encrypt (56, 65)",1.000,1.000,1.000,0.000,false,false,"/AesGcm<'static> (55,66)/encrypt (56,65)"
"new (22, 51)",0.000,1.000,0.000,0.000,false,false,"/AesGcm<'a> (21,53)/new (22,51)"
aesni.rs,7.378,0.568,13.153,5.032,false,false,src/aesni.rs
"size (94, 94)",0.000,1.000,0.000,0.000,false,false,"/size (94,94)"
"setup_working_key_aesni_128 (113, 127)",2.308,0.769,3.000,0.000,false,false,"/setup_working_key_aesni_128 (113,127)"
"setup_working_key_aesni_192 (129, 143)",2.308,0.769,3.000,0.000,false,false,"/setup_working_key_aesni_192 (129,143)"
"setup_working_key_aesni_256 (145, 159)",2.308,0.769,3.000,0.000,false,false,"/setup_working_key_aesni_256 (145,159)"
"encrypt_block_aesni (161, 169)",0.000,1.000,0.000,0.000,false,false,"/encrypt_block_aesni (161,169)"
"decrypt_block_aesni (171, 179)",0.000,1.000,0.000,0.000,false,false,"/decrypt_block_aesni (171,179)"
"block_size (82, 82)",0.000,0.000,0.000,0.000,false,false,"/AesNiDecryptor (81,86)/block_size (82,82)"
"decrypt_block (83, 85)",0.000,1.000,0.000,0.000,false,false,"/AesNiDecryptor (81,86)/decrypt_block (83,85)"
"block_size (75, 75)",0.000,1.000,0.000,0.000,false,false,"/AesNiEncryptor (74,79)/block_size (75,75)"
"encrypt_block (76, 78)",0.000,1.000,0.000,0.000,false,false,"/AesNiEncryptor (74,79)/encrypt_block (76,78)"
"new (53, 70)",1.556,0.778,2.022,1.412,false,false,"/AesNiDecryptor (52,72)/new (53,70)"
"new (32, 49)",1.556,0.778,2.022,1.412,false,false,"/AesNiEncryptor (31,50)/new (32,49)"
"clone (26, 26)",0.000,0.000,0.000,0.000,false,false,"/AesNiDecryptor (26,26)/clone (26,26)"
"clone (18, 18)",0.000,0.000,0.000,0.000,false,false,"/AesNiEncryptor (18,18)/clone (18,18)"
aessafe.rs,12.919,0.807,16.001,0.934,false,false,src/aessafe.rs
"ffmulx (327, 332)",0.000,1.000,0.000,0.000,false,false,"/ffmulx (327,332)"
"inv_mcol (334, 341)",0.000,1.143,0.000,0.000,false,false,"/inv_mcol (334,341)"
"sub_word (343, 346)",0.000,1.000,0.000,0.000,false,false,"/sub_word (343,346)"
"create_round_keys (360, 402)",10.833,0.833,13.006,1.677,false,false,"/create_round_keys (360,402)"
"encrypt_core (416, 434)",1.154,1.154,1.000,0.000,false,false,"/encrypt_core (416,434)"
"decrypt_core (436, 454)",1.154,1.154,1.000,0.000,false,false,"/decrypt_core (436,454)"
"bit_slice_4x4_with_u16 (686, 708)",0.000,1.150,0.000,0.000,false,false,"/bit_slice_4x4_with_u16 (686,708)"
"bit_slice_4x1_with_u16 (712, 714)",0.000,1.000,0.000,0.000,false,false,"/bit_slice_4x1_with_u16 (712,714)"
"bit_slice_1x16_with_u16 (717, 727)",0.000,1.222,0.000,0.000,false,false,"/bit_slice_1x16_with_u16 (717,727)"
"un_bit_slice_4x4_with_u16 (730, 757)",0.000,1.333,0.000,0.000,false,false,"/un_bit_slice_4x4_with_u16 (730,757)"
"un_bit_slice_4x1_with_u16 (760, 763)",0.000,1.000,0.000,0.000,false,false,"/un_bit_slice_4x1_with_u16 (760,763)"
"un_bit_slice_1x16_with_u16 (766, 773)",0.000,1.143,0.000,0.000,false,false,"/un_bit_slice_1x16_with_u16 (766,773)"
"bit_slice_1x128_with_u32x4 (776, 833)",0.000,1.074,0.000,0.000,false,false,"/bit_slice_1x128_with_u32x4 (776,833)"
"bit_slice_fill_4x4_with_u32x4 (837, 846)",1.000,1.000,1.000,0.000,false,false,"/bit_slice_fill_4x4_with_u32x4 (837,846)"
"un_bit_slice_1x128_with_u32x4 (849, 908)",0.000,1.111,0.000,0.000,false,false,"/un_bit_slice_1x128_with_u32x4 (849,908)"
"shift_row (1207, 1210)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (1206,1231)/shift_row (1207,1210)"
"inv_shift_row (1212, 1215)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (1206,1231)/inv_shift_row (1212,1215)"
"ror1 (1217, 1220)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (1206,1231)/ror1 (1217,1220)"
"ror2 (1222, 1225)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (1206,1231)/ror2 (1222,1225)"
"ror3 (1227, 1230)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (1206,1231)/ror3 (1227,1230)"
"default (1201, 1203)",0.000,0.000,0.000,0.000,false,false,"/u32x4 (1200,1204)/default (1201,1203)"
"not (1195, 1197)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (1192,1198)/not (1195,1197)"
"lsh (1173, 1180)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (1172,1190)/lsh (1173,1180)"
"rsh (1182, 1189)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (1172,1190)/rsh (1182,1189)"
"shift_row (1137, 1146)",0.000,1.667,0.000,0.000,false,true,"/u16 (1136,1170)/shift_row (1137,1146)"
"inv_shift_row (1148, 1157)",0.000,1.667,0.000,0.000,false,true,"/u16 (1136,1170)/inv_shift_row (1148,1157)"
"ror1 (1159, 1161)",0.000,1.000,0.000,0.000,false,false,"/u16 (1136,1170)/ror1 (1159,1161)"
"ror2 (1163, 1165)",0.000,1.000,0.000,0.000,false,false,"/u16 (1136,1170)/ror2 (1163,1165)"
"ror3 (1167, 1169)",0.000,1.000,0.000,0.000,false,false,"/u16 (1136,1170)/ror3 (1167,1169)"
"sub_bytes (1027, 1032)",0.000,1.000,0.000,0.000,false,false,"/Bs8State<T> (1026,1126)/sub_bytes (1027,1032)"
"inv_sub_bytes (1034, 1039)",0.000,1.000,0.000,0.000,false,false,"/Bs8State<T> (1026,1126)/inv_sub_bytes (1034,1039)"
"shift_rows (1041, 1052)",0.000,1.000,0.000,0.000,false,false,"/Bs8State<T> (1026,1126)/shift_rows (1041,1052)"
"inv_shift_rows (1054, 1065)",0.000,1.000,0.000,0.000,false,false,"/Bs8State<T> (1026,1126)/inv_shift_rows (1054,1065)"
"mix_columns (1068, 1081)",0.000,1.167,0.000,0.000,false,false,"/Bs8State<T> (1026,1126)/mix_columns (1068,1081)"
"inv_mix_columns (1084, 1121)",0.000,1.056,0.000,0.000,false,false,"/Bs8State<T> (1026,1126)/inv_mix_columns (1084,1121)"
"add_round_key (1123, 1125)",0.000,1.000,0.000,0.000,false,false,"/Bs8State<T> (1026,1126)/add_round_key (1123,1125)"
"inv (1015, 1023)",0.000,1.000,0.000,0.000,false,false,"/Bs8State<T> (1014,1024)/inv (1015,1023)"
"mul (980, 988)",0.000,1.000,0.000,0.000,false,false,"/Bs4State<T> (979,1006)/mul (980,988)"
"sq_scl (990, 995)",0.000,1.000,0.000,0.000,false,false,"/Bs4State<T> (979,1006)/sq_scl (990,995)"
"inv (997, 1005)",0.000,1.000,0.000,0.000,false,false,"/Bs4State<T> (979,1006)/inv (997,1005)"
"mul (934, 941)",0.000,1.000,0.000,0.000,false,false,"/Bs2State<T> (933,964)/mul (934,941)"
"scl_n (943, 947)",0.000,1.000,0.000,0.000,false,false,"/Bs2State<T> (933,964)/scl_n (943,947)"
"scl_n2 (949, 954)",0.000,1.000,0.000,0.000,false,false,"/Bs2State<T> (933,964)/scl_n2 (949,954)"
"sq (956, 959)",0.000,1.000,0.000,0.000,false,false,"/Bs2State<T> (933,964)/sq (956,959)"
"inv (961, 963)",0.000,1.000,0.000,0.000,false,false,"/Bs2State<T> (933,964)/inv (961,963)"
"write_row_major (880, 898)",0.000,1.000,0.000,0.000,false,false,"/un_bit_slice_1x128_with_u32x4 (849,908)/write_row_major (880,898)"
"read_row_major (786, 804)",0.000,1.000,0.000,0.000,false,false,"/bit_slice_1x128_with_u32x4 (776,833)/read_row_major (786,804)"
"pb (731, 733)",0.000,1.000,0.000,0.000,false,false,"/un_bit_slice_4x4_with_u16 (730,757)/pb (731,733)"
"deconstruct (735, 749)",0.000,1.364,0.000,0.000,false,false,"/un_bit_slice_4x4_with_u16 (730,757)/deconstruct (735,749)"
"pb (687, 689)",0.000,1.000,0.000,0.000,false,false,"/bit_slice_4x4_with_u16 (686,708)/pb (687,689)"
"construct (691, 696)",0.000,1.000,0.000,0.000,false,false,"/bit_slice_4x4_with_u16 (686,708)/construct (691,696)"
"xor (678, 682)",0.000,1.000,0.000,0.000,false,false,"/Bs2State<T> (677,683)/xor (678,682)"
"split (665, 668)",0.000,1.000,0.000,0.000,false,false,"/Bs2State<T> (664,675)/split (665,668)"
"join (670, 674)",0.000,1.000,0.000,0.000,false,false,"/Bs2State<T> (664,675)/join (670,674)"
"xor (654, 658)",0.000,1.000,0.000,0.000,false,false,"/Bs4State<T> (653,659)/xor (654,658)"
"split (641, 644)",0.000,1.000,0.000,0.000,false,false,"/Bs4State<T> (640,651)/split (641,644)"
"join (646, 650)",0.000,1.000,0.000,0.000,false,false,"/Bs4State<T> (640,651)/join (646,650)"
"xor_x63 (624, 634)",0.000,1.000,0.000,0.000,false,false,"/Bs8State<T> (617,635)/xor_x63 (624,634)"
"xor (467, 471)",0.000,1.000,0.000,0.000,false,false,"/Bs8State<T> (466,615)/xor (467,471)"
"change_basis_a2x (545, 561)",0.000,1.133,0.000,0.000,false,false,"/Bs8State<T> (466,615)/change_basis_a2x (545,561)"
"change_basis_x2s (563, 579)",0.000,1.133,0.000,0.000,false,false,"/Bs8State<T> (466,615)/change_basis_x2s (563,579)"
"change_basis_x2a (581, 597)",0.000,1.133,0.000,0.000,false,false,"/Bs8State<T> (466,615)/change_basis_x2a (581,597)"
"change_basis_s2x (599, 614)",0.000,1.143,0.000,0.000,false,false,"/Bs8State<T> (466,615)/change_basis_s2x (599,614)"
"split (460, 463)",0.000,1.000,0.000,0.000,false,false,"/Bs8State<T> (459,464)/split (460,463)"
bcrypt.rs,4.062,0.812,5.000,0.000,false,false,src/bcrypt.rs
"setup (11, 22)",1.100,1.100,1.000,0.000,false,false,"/setup (11,22)"
"bcrypt (24, 41)",3.000,1.000,3.000,0.000,false,false,"/bcrypt (24,41)"
"openwall_test_vectors (56, 137)",0.000,1.000,0.000,0.000,false,false,"/openwall_test_vectors (56,137)"
"test_openwall_test_vectors (140, 147)",0.875,0.875,1.000,0.000,false,false,"/test_openwall_test_vectors (140,147)"
"bcrypt_16_5 (156, 163)",0.000,0.000,0.000,0.000,false,false,"/bcrypt_16_5 (156,163)"
"<anonymous> (160, 162)",0.000,0.000,0.000,0.000,false,false,"/bcrypt_16_5 (156,163)/<anonymous> (160,162)"
bcrypt_pbkdf.rs,18.247,0.912,20.000,0.000,false,false,src/bcrypt_pbkdf.rs
"bcrypt_hash (13, 36)",4.750,0.950,5.000,0.000,false,false,"/bcrypt_hash (13,36)"
"bcrypt_pbkdf (38, 85)",14.000,1.077,13.000,0.000,false,false,"/bcrypt_pbkdf (38,85)"
"test_bcrypt_hash (94, 166)",1.000,1.000,1.000,0.000,false,false,"/test_bcrypt_hash (94,166)"
"test_openbsd_vectors (169, 265)",1.000,1.000,1.000,0.000,false,false,"/test_openbsd_vectors (169,265)"
"bench_bcrypt_pbkdf_5_32 (274, 282)",0.000,0.000,0.000,0.000,false,false,"/bench_bcrypt_pbkdf_5_32 (274,282)"
"<anonymous> (279, 281)",0.000,0.000,0.000,0.000,false,false,"/bench_bcrypt_pbkdf_5_32 (274,282)/<anonymous> (279,281)"
blake2b.rs,18.778,0.695,27.126,6.018,false,false,src/blake2b.rs
"test_hash (404, 435)",5.208,1.042,5.000,0.000,false,false,"/test_hash (404,435)"
"test_blake2b_digest (438, 497)",0.000,1.053,0.000,0.000,false,false,"/test_blake2b_digest (438,497)"
"test_blake2b_mac (507, 522)",0.000,1.000,0.000,0.000,false,false,"/test_blake2b_mac (507,522)"
"blake2b_10 (534, 541)",0.000,0.000,0.000,0.000,false,false,"/blake2b_10 (534,541)"
"blake2b_1k (544, 551)",0.000,0.000,0.000,0.000,false,false,"/blake2b_1k (544,551)"
"blake2b_64k (554, 561)",0.000,0.000,0.000,0.000,false,false,"/blake2b_64k (554,561)"
"<anonymous> (557, 559)",0.000,0.000,0.000,0.000,false,false,"/blake2b_64k (554,561)/<anonymous> (557,559)"
"<anonymous> (547, 549)",0.000,0.000,0.000,0.000,false,false,"/blake2b_1k (544,551)/<anonymous> (547,549)"
"<anonymous> (537, 539)",0.000,0.000,0.000,0.000,false,false,"/blake2b_10 (534,541)/<anonymous> (537,539)"
"<anonymous> (508, 508)",0.000,1.000,0.000,0.000,false,false,"/test_blake2b_mac (507,522)/<anonymous> (508,508)"
"input (355, 357)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (347,388)/input (355,357)"
"reset (362, 364)",0.000,0.000,0.000,0.000,false,false,"/Blake2b (347,388)/reset (362,364)"
"result (369, 373)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (347,388)/result (369,373)"
"raw_result (380, 382)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (347,388)/raw_result (380,382)"
"output_bytes (387, 387)",0.000,0.000,0.000,0.000,false,false,"/Blake2b (347,388)/output_bytes (387,387)"
"reset (340, 340)",0.000,0.000,0.000,0.000,false,false,"/Blake2b (339,345)/reset (340,340)"
"input (341, 341)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (339,345)/input (341,341)"
"result (342, 342)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (339,345)/result (342,342)"
"output_bits (343, 343)",0.000,0.000,0.000,0.000,false,false,"/Blake2b (339,345)/output_bits (343,343)"
"block_size (344, 344)",0.000,0.000,0.000,0.000,false,false,"/Blake2b (339,345)/block_size (344,344)"
"set_lastnode (97, 99)",0.000,0.000,0.000,0.000,false,false,"/Blake2b (96,337)/set_lastnode (97,99)"
"set_lastblock (101, 106)",0.833,0.833,1.005,0.667,false,false,"/Blake2b (96,337)/set_lastblock (101,106)"
"increment_counter (108, 111)",2.000,1.000,2.000,0.000,false,false,"/Blake2b (96,337)/increment_counter (108,111)"
"init0 (113, 130)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (96,337)/init0 (113,130)"
"apply_param (132, 157)",1.083,1.083,1.000,0.000,false,false,"/Blake2b (96,337)/apply_param (132,157)"
"init_param (161, 165)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (96,337)/init_param (161,165)"
"default_param (167, 181)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (96,337)/default_param (167,181)"
"new (183, 186)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (96,337)/new (183,186)"
"apply_key (188, 193)",0.000,1.000,0.000,0.000,false,false,"/Blake2b (96,337)/apply_key (188,193)"
"new_keyed (195, 216)",0.000,1.050,0.000,0.000,false,false,"/Blake2b (96,337)/new_keyed (195,216)"
"compress (218, 252)",2.065,1.032,2.000,0.000,false,false,"/Blake2b (96,337)/compress (218,252)"
"update (254, 278)",4.182,1.045,4.000,0.000,false,false,"/Blake2b (96,337)/update (254,278)"
"finalize (280, 307)",5.200,1.040,5.001,0.741,false,false,"/Blake2b (96,337)/finalize (280,307)"
"reset (309, 329)",5.000,1.000,5.000,0.000,false,false,"/Blake2b (96,337)/reset (309,329)"
"blake2b (331, 336)",0.000,0.000,6.000,8.000,false,false,"/Blake2b (96,337)/blake2b (331,336)"
"clone (56, 56)",0.000,0.000,0.000,0.000,false,false,"/Blake2b (56,56)/clone (56,56)"
blake2s.rs,17.176,0.636,28.356,13.282,false,false,src/blake2s.rs
"test_hash (393, 424)",5.000,1.000,5.002,0.800,false,false,"/test_hash (393,424)"
"test_blake2s_digest (427, 463)",0.000,1.057,0.000,0.000,false,false,"/test_blake2s_digest (427,463)"
"test_blake2s_mac (473, 484)",0.000,1.000,0.000,0.000,false,false,"/test_blake2s_mac (473,484)"
"blake2s_10 (496, 503)",0.000,0.000,0.000,0.000,false,false,"/blake2s_10 (496,503)"
"blake2s_1k (506, 513)",0.000,0.000,0.000,0.000,false,false,"/blake2s_1k (506,513)"
"blake2s_64k (516, 523)",0.000,0.000,0.000,0.000,false,false,"/blake2s_64k (516,523)"
"<anonymous> (519, 521)",0.000,0.000,0.000,0.000,false,false,"/blake2s_64k (516,523)/<anonymous> (519,521)"
"<anonymous> (509, 511)",0.000,0.000,0.000,0.000,false,false,"/blake2s_1k (506,513)/<anonymous> (509,511)"
"<anonymous> (499, 501)",0.000,0.000,0.000,0.000,false,false,"/blake2s_10 (496,503)/<anonymous> (499,501)"
"<anonymous> (474, 474)",0.000,1.000,0.000,0.000,false,false,"/test_blake2s_mac (473,484)/<anonymous> (474,474)"
"input (345, 347)",0.000,1.000,0.000,0.000,false,false,"/Blake2s (337,378)/input (345,347)"
"reset (352, 354)",0.000,0.000,0.000,0.000,false,false,"/Blake2s (337,378)/reset (352,354)"
"result (359, 363)",0.000,1.000,0.000,0.000,false,false,"/Blake2s (337,378)/result (359,363)"
"raw_result (370, 372)",0.000,1.000,0.000,0.000,false,false,"/Blake2s (337,378)/raw_result (370,372)"
"output_bytes (377, 377)",0.000,0.000,0.000,0.000,false,false,"/Blake2s (337,378)/output_bytes (377,377)"
"reset (330, 330)",0.000,0.000,0.000,0.000,false,false,"/Blake2s (329,335)/reset (330,330)"
"input (331, 331)",0.000,1.000,0.000,0.000,false,false,"/Blake2s (329,335)/input (331,331)"
"result (332, 332)",0.000,1.000,0.000,0.000,false,false,"/Blake2s (329,335)/result (332,332)"
"output_bits (333, 333)",0.000,0.000,0.000,0.000,false,false,"/Blake2s (329,335)/output_bits (333,333)"
"block_size (334, 334)",0.000,0.000,0.000,0.000,false,false,"/Blake2s (329,335)/block_size (334,334)"
"set_lastnode (92, 94)",0.000,0.000,0.000,0.000,false,false,"/Blake2s (91,327)/set_lastnode (92,94)"
"set_lastblock (96, 101)",0.833,0.833,1.005,0.667,false,false,"/Blake2s (91,327)/set_lastblock (96,101)"
"increment_counter (103, 106)",2.000,1.000,2.000,0.000,false,false,"/Blake2s (91,327)/increment_counter (103,106)"
"init0 (108, 125)",0.000,1.000,0.000,0.000,false,false,"/Blake2s (91,327)/init0 (108,125)"
"apply_param (127, 151)",1.087,1.087,1.000,0.000,false,false,"/Blake2s (91,327)/apply_param (127,151)"
"init_param (155, 159)",0.000,1.000,0.000,0.000,false,false,"/Blake2s (91,327)/init_param (155,159)"
"default_param (161, 174)",0.000,0.000,0.000,0.000,false,false,"/Blake2s (91,327)/default_param (161,174)"
"new (176, 179)",0.000,0.000,0.000,0.000,false,false,"/Blake2s (91,327)/new (176,179)"
"apply_key (181, 186)",0.000,1.000,0.000,0.000,false,false,"/Blake2s (91,327)/apply_key (181,186)"
"new_keyed (188, 208)",0.000,1.053,0.000,0.000,false,false,"/Blake2s (91,327)/new_keyed (188,208)"
"compress (210, 242)",2.069,1.034,2.000,0.000,false,false,"/Blake2s (91,327)/compress (210,242)"
"update (244, 268)",4.182,1.045,4.000,0.000,false,false,"/Blake2s (91,327)/update (244,268)"
"finalize (270, 297)",5.200,1.040,5.001,0.741,false,false,"/Blake2s (91,327)/finalize (270,297)"
"reset (299, 319)",5.000,1.000,5.000,0.000,false,false,"/Blake2s (91,327)/reset (299,319)"
"blake2s (321, 326)",0.000,0.000,6.000,8.000,false,false,"/Blake2s (91,327)/blake2s (321,326)"
"clone (52, 52)",0.000,0.000,0.000,0.000,false,false,"/Blake2s (52,52)/clone (52,52)"
blockmodes.rs,81.019,0.735,125.606,36.917,false,true,src/blockmodes.rs
"update_history (92, 105)",2.000,1.000,2.000,0.000,false,false,"/update_history (92,105)"
"add_ctr (663, 672)",2.700,0.900,3.000,0.000,false,false,"/add_ctr (663,672)"
"construct_ctr_x8 (744, 749)",1.000,1.000,1.000,0.000,false,false,"/construct_ctr_x8 (744,749)"
"aes_ecb_no_padding_tests (878, 890)",0.000,1.000,0.000,0.000,false,false,"/aes_ecb_no_padding_tests (878,890)"
"aes_ecb_pkcs_padding_tests (892, 917)",0.000,1.000,0.000,0.000,false,false,"/aes_ecb_pkcs_padding_tests (892,917)"
"aes_cbc_no_padding_tests (919, 932)",0.000,1.000,0.000,0.000,false,false,"/aes_cbc_no_padding_tests (919,932)"
"aes_cbc_pkcs_padding_tests (934, 961)",0.000,1.000,0.000,0.000,false,false,"/aes_cbc_pkcs_padding_tests (934,961)"
"aes_ctr_tests (963, 977)",0.000,1.000,0.000,0.000,false,false,"/aes_ctr_tests (963,977)"
"run_full_test (980, 1007)",1.407,0.704,2.021,1.391,false,false,"/run_full_test (980,1007)"
"run_inc (1024, 1119)",13.753,0.809,17.042,3.579,false,false,"/run_inc (1024,1119)"
"run_inc1_test (1121, 1148)",0.000,1.000,0.000,0.000,false,false,"/run_inc1_test (1121,1148)"
"run_rand_test (1150, 1204)",1.040,1.040,1.000,0.000,false,false,"/run_rand_test (1150,1204)"
"run_test (1206, 1219)",0.000,1.000,0.000,0.000,false,false,"/run_test (1206,1219)"
"aes_ecb_no_padding (1222, 1236)",1.000,1.000,1.000,0.000,false,false,"/aes_ecb_no_padding (1222,1236)"
"aes_ecb_pkcs_padding (1239, 1253)",1.000,1.000,1.000,0.000,false,false,"/aes_ecb_pkcs_padding (1239,1253)"
"aes_cbc_no_padding (1256, 1270)",1.000,1.000,1.000,0.000,false,false,"/aes_cbc_no_padding (1256,1270)"
"aes_cbc_pkcs_padding (1273, 1287)",1.000,1.000,1.000,0.000,false,false,"/aes_cbc_pkcs_padding (1273,1287)"
"aes_ctr (1290, 1304)",1.000,1.000,1.000,0.000,false,false,"/aes_ctr (1290,1304)"
"aes_ctr_x8 (1307, 1321)",1.000,1.000,1.000,0.000,false,false,"/aes_ctr_x8 (1307,1321)"
"aes_ecb_no_padding_bench (1336, 1358)",0.000,0.000,6.000,8.000,false,false,"/aes_ecb_no_padding_bench (1336,1358)"
"aes_cbc_pkcs_padding_bench (1361, 1384)",0.000,0.000,6.000,8.000,false,false,"/aes_cbc_pkcs_padding_bench (1361,1384)"
"aes_ctr_bench (1387, 1410)",0.000,0.000,6.000,8.000,false,false,"/aes_ctr_bench (1387,1410)"
"aes_ctr_x8_bench (1413, 1436)",0.000,0.000,6.000,8.000,false,false,"/aes_ctr_x8_bench (1413,1436)"
"<anonymous> (1422, 1433)",0.000,0.000,6.000,8.000,false,false,"/aes_ctr_x8_bench (1413,1436)/<anonymous> (1422,1433)"
"<anonymous> (1396, 1407)",0.000,0.000,6.000,8.000,false,false,"/aes_ctr_bench (1387,1410)/<anonymous> (1396,1407)"
"<anonymous> (1370, 1381)",0.000,0.000,6.000,8.000,false,false,"/aes_cbc_pkcs_padding_bench (1361,1384)/<anonymous> (1370,1381)"
"<anonymous> (1344, 1355)",0.000,0.000,6.000,8.000,false,false,"/aes_ecb_no_padding_bench (1336,1358)/<anonymous> (1344,1355)"
"<anonymous> (1312, 1315)",0.000,1.000,0.000,0.000,false,false,"/aes_ctr_x8 (1307,1321)/<anonymous> (1312,1315)"
"<anonymous> (1316, 1319)",0.000,1.000,0.000,0.000,false,false,"/aes_ctr_x8 (1307,1321)/<anonymous> (1316,1319)"
"<anonymous> (1295, 1298)",0.000,1.000,0.000,0.000,false,false,"/aes_ctr (1290,1304)/<anonymous> (1295,1298)"
"<anonymous> (1299, 1302)",0.000,1.000,0.000,0.000,false,false,"/aes_ctr (1290,1304)/<anonymous> (1299,1302)"
"<anonymous> (1278, 1281)",0.000,1.000,0.000,0.000,false,false,"/aes_cbc_pkcs_padding (1273,1287)/<anonymous> (1278,1281)"
"<anonymous> (1282, 1285)",0.000,1.000,0.000,0.000,false,false,"/aes_cbc_pkcs_padding (1273,1287)/<anonymous> (1282,1285)"
"<anonymous> (1261, 1264)",0.000,1.000,0.000,0.000,false,false,"/aes_cbc_no_padding (1256,1270)/<anonymous> (1261,1264)"
"<anonymous> (1265, 1268)",0.000,1.000,0.000,0.000,false,false,"/aes_cbc_no_padding (1256,1270)/<anonymous> (1265,1268)"
"<anonymous> (1244, 1247)",0.000,1.000,0.000,0.000,false,false,"/aes_ecb_pkcs_padding (1239,1253)/<anonymous> (1244,1247)"
"<anonymous> (1248, 1251)",0.000,1.000,0.000,0.000,false,false,"/aes_ecb_pkcs_padding (1239,1253)/<anonymous> (1248,1251)"
"<anonymous> (1227, 1230)",0.000,1.000,0.000,0.000,false,false,"/aes_ecb_no_padding (1222,1236)/<anonymous> (1227,1230)"
"<anonymous> (1231, 1234)",0.000,1.000,0.000,0.000,false,false,"/aes_ecb_no_padding (1222,1236)/<anonymous> (1231,1234)"
"<anonymous> (1169, 1171)",0.000,1.000,0.000,0.000,false,false,"/run_rand_test (1150,1204)/<anonymous> (1169,1171)"
"<anonymous> (1172, 1174)",0.000,1.000,0.000,0.000,false,false,"/run_rand_test (1150,1204)/<anonymous> (1172,1174)"
"<anonymous> (1184, 1186)",0.000,1.000,0.000,0.000,false,false,"/run_rand_test (1150,1204)/<anonymous> (1184,1186)"
"<anonymous> (1187, 1187)",0.000,1.000,0.000,0.000,false,false,"/run_rand_test (1150,1204)/<anonymous> (1187,1187)"
"<anonymous> (1188, 1188)",0.000,1.000,0.000,0.000,false,false,"/run_rand_test (1150,1204)/<anonymous> (1188,1188)"
"<anonymous> (1196, 1198)",0.000,1.000,0.000,0.000,false,false,"/run_rand_test (1150,1204)/<anonymous> (1196,1198)"
"<anonymous> (1199, 1199)",0.000,1.000,0.000,0.000,false,false,"/run_rand_test (1150,1204)/<anonymous> (1199,1199)"
"<anonymous> (1200, 1200)",0.000,1.000,0.000,0.000,false,false,"/run_rand_test (1150,1204)/<anonymous> (1200,1200)"
"<anonymous> (1129, 1131)",0.000,1.000,0.000,0.000,false,false,"/run_inc1_test (1121,1148)/<anonymous> (1129,1131)"
"<anonymous> (1132, 1132)",0.000,1.000,0.000,0.000,false,false,"/run_inc1_test (1121,1148)/<anonymous> (1132,1132)"
"<anonymous> (1133, 1133)",0.000,1.000,0.000,0.000,false,false,"/run_inc1_test (1121,1148)/<anonymous> (1133,1133)"
"<anonymous> (1141, 1143)",0.000,1.000,0.000,0.000,false,false,"/run_inc1_test (1121,1148)/<anonymous> (1141,1143)"
"<anonymous> (1144, 1144)",0.000,1.000,0.000,0.000,false,false,"/run_inc1_test (1121,1148)/<anonymous> (1144,1144)"
"<anonymous> (1145, 1145)",0.000,1.000,0.000,0.000,false,false,"/run_inc1_test (1121,1148)/<anonymous> (1145,1145)"
"<anonymous> (1046, 1055)",8.000,1.000,8.000,0.000,false,false,"/run_inc (1024,1119)/<anonymous> (1046,1055)"
"<anonymous> (1057, 1060)",0.000,1.000,0.000,0.000,false,false,"/run_inc (1024,1119)/<anonymous> (1057,1060)"
"get_plain (870, 872)",0.000,1.000,0.000,0.000,false,false,"/CtrTest (869,876)/get_plain (870,872)"
"get_cipher (873, 875)",0.000,1.000,0.000,0.000,false,false,"/CtrTest (869,876)/get_cipher (873,875)"
"get_plain (854, 856)",0.000,1.000,0.000,0.000,false,false,"/CbcTest (853,860)/get_plain (854,856)"
"get_cipher (857, 859)",0.000,1.000,0.000,0.000,false,false,"/CbcTest (853,860)/get_cipher (857,859)"
"get_plain (838, 840)",0.000,1.000,0.000,0.000,false,false,"/EcbTest (837,844)/get_plain (838,840)"
"get_cipher (841, 843)",0.000,1.000,0.000,0.000,false,false,"/EcbTest (837,844)/get_cipher (841,843)"
"decrypt (806, 809)",0.000,1.000,0.000,0.000,false,false,"/CtrModeX8<A> (805,810)/decrypt (806,809)"
"encrypt (799, 802)",0.000,1.000,0.000,0.000,false,false,"/CtrModeX8<A> (798,803)/encrypt (799,802)"
"process (793, 795)",0.000,1.000,0.000,0.000,false,false,"/CtrModeX8<A> (792,796)/process (793,795)"
"new (753, 762)",0.000,1.000,0.000,0.000,false,false,"/CtrModeX8<A> (751,790)/new (753,762)"
"reset (763, 766)",0.000,0.000,0.000,0.000,false,false,"/CtrModeX8<A> (751,790)/reset (763,766)"
"process (767, 789)",8.000,1.000,8.000,0.000,false,false,"/CtrModeX8<A> (751,790)/process (767,789)"
"decrypt (731, 734)",0.000,1.000,0.000,0.000,false,false,"/CtrMode<A> (730,735)/decrypt (731,734)"
"encrypt (724, 727)",0.000,1.000,0.000,0.000,false,false,"/CtrMode<A> (723,728)/encrypt (724,727)"
"process (718, 720)",0.000,1.000,0.000,0.000,false,false,"/CtrMode<A> (717,721)/process (718,720)"
"new (683, 690)",0.000,1.000,0.000,0.000,false,false,"/CtrMode<A> (681,715)/new (683,690)"
"reset (691, 694)",0.000,0.000,0.000,0.000,false,false,"/CtrMode<A> (681,715)/reset (691,694)"
"process (695, 714)",4.750,0.950,5.000,0.000,false,false,"/CtrMode<A> (681,715)/process (695,714)"
"decrypt (657, 660)",0.000,1.000,0.000,0.000,false,false,"/CbcDecryptor<T, X> (656,661)/decrypt (657,660)"
"new (636, 650)",0.000,1.000,0.000,0.000,false,false,"/CbcDecryptor<T, X> (634,654)/new (636,650)"
"reset (651, 653)",0.000,0.000,0.000,0.000,false,false,"/CbcDecryptor<T, X> (634,654)/reset (651,653)"
"process_block (621, 626)",1.000,1.000,1.000,0.000,false,false,"/CbcDecryptorProcessor<T> (620,627)/process_block (621,626)"
"encrypt (609, 612)",0.000,1.000,0.000,0.000,false,false,"/CbcEncryptor<T, X> (608,613)/encrypt (609,612)"
"new (588, 602)",0.000,1.000,0.000,0.000,false,false,"/CbcEncryptor<T, X> (586,606)/new (588,602)"
"reset (603, 605)",0.000,0.000,0.000,0.000,false,false,"/CbcEncryptor<T, X> (586,606)/reset (603,605)"
"process_block (573, 578)",1.000,1.000,1.000,0.000,false,false,"/CbcEncryptorProcessor<T> (572,579)/process_block (573,578)"
"decrypt (561, 564)",0.000,1.000,0.000,0.000,false,false,"/EcbDecryptor<T, X> (560,565)/decrypt (561,564)"
"new (546, 554)",0.000,1.000,0.000,0.000,false,false,"/EcbDecryptor<T, X> (544,558)/new (546,554)"
"reset (555, 557)",0.000,0.000,0.000,0.000,false,false,"/EcbDecryptor<T, X> (544,558)/reset (555,557)"
"process_block (534, 536)",0.000,1.000,0.000,0.000,false,false,"/EcbDecryptorProcessor<T> (533,537)/process_block (534,536)"
"encrypt (523, 526)",0.000,1.000,0.000,0.000,false,false,"/EcbEncryptor<T, X> (522,527)/encrypt (523,526)"
"new (508, 516)",0.000,1.000,0.000,0.000,false,false,"/EcbEncryptor<T, X> (506,520)/new (508,516)"
"reset (517, 519)",0.000,0.000,0.000,0.000,false,false,"/EcbEncryptor<T, X> (506,520)/reset (517,519)"
"process_block (496, 498)",0.000,1.000,0.000,0.000,false,false,"/EcbEncryptorProcessor<T> (495,499)/process_block (496,498)"
"pad_input (487, 487)",0.000,1.000,0.000,0.000,false,false,"/DecPadding<X> (486,489)/pad_input (487,487)"
"strip_output (488, 488)",0.000,1.000,0.000,0.000,false,false,"/DecPadding<X> (486,489)/strip_output (488,488)"
"wrap (483, 483)",0.000,1.000,0.000,0.000,false,false,"/DecPadding<X> (482,484)/wrap (483,483)"
"pad_input (473, 473)",0.000,1.000,0.000,0.000,false,false,"/EncPadding<X> (472,475)/pad_input (473,473)"
"strip_output (474, 474)",0.000,1.000,0.000,0.000,false,false,"/EncPadding<X> (472,475)/strip_output (474,474)"
"wrap (469, 469)",0.000,1.000,0.000,0.000,false,false,"/EncPadding<X> (468,470)/wrap (469,469)"
"pad_input (440, 446)",1.000,1.000,1.000,0.000,false,false,"/PkcsPadding (439,461)/pad_input (440,446)"
"strip_output (447, 460)",2.357,0.786,3.005,1.000,false,false,"/PkcsPadding (439,461)/strip_output (447,460)"
"pad_input (424, 424)",0.000,1.000,0.000,0.000,false,false,"/NoPadding (423,426)/pad_input (424,424)"
"strip_output (425, 425)",0.000,1.000,0.000,0.000,false,false,"/NoPadding (423,426)/strip_output (425,425)"
"new (110, 122)",0.000,1.000,0.000,0.000,false,false,"/BlockEngine<P, X> (107,417)/new (110,122)"
"new_with_history (126, 137)",0.000,1.000,0.000,0.000,false,false,"/BlockEngine<P, X> (107,417)/new_with_history (126,137)"
"fast_mode (142, 212)",9.443,1.049,9.000,0.554,false,false,"/BlockEngine<P, X> (107,417)/fast_mode (142,212)"
"process (215, 400)",32.667,1.167,60.449,32.990,false,true,"/BlockEngine<P, X> (107,417)/process (215,400)"
"reset (401, 411)",0.000,0.000,6.000,8.000,false,false,"/BlockEngine<P, X> (107,417)/reset (401,411)"
"reset_with_history (412, 416)",0.000,0.000,0.000,0.000,false,false,"/BlockEngine<P, X> (107,417)/reset_with_history (412,416)"
"process_scratch (222, 243)",0.000,1.100,0.000,0.000,false,false,"/BlockEngine<P, X> (107,417)/process (215,400)/process_scratch (222,243)"
"has_next (146, 155)",1.250,1.250,1.000,0.000,false,false,"/BlockEngine<P, X> (107,417)/fast_mode (142,212)/has_next (146,155)"
"split_at (156, 158)",0.000,1.000,0.000,0.000,false,false,"/BlockEngine<P, X> (107,417)/fast_mode (142,212)/split_at (156,158)"
blowfish.rs,15.382,0.905,17.001,0.967,false,false,src/blowfish.rs
"next_u32_wrap (17, 27)",2.727,0.909,3.000,0.000,false,false,"/next_u32_wrap (17,27)"
"eay_test_vectors (351, 524)",0.000,1.000,0.000,0.000,false,false,"/eay_test_vectors (351,524)"
"encrypt_eay_test_vectors (527, 535)",0.889,0.889,1.000,0.000,false,false,"/encrypt_eay_test_vectors (527,535)"
"decrypt_eay_test_vectors (538, 546)",0.889,0.889,1.000,0.000,false,false,"/decrypt_eay_test_vectors (538,546)"
"blowfish (556, 566)",0.000,0.000,0.000,0.000,false,false,"/blowfish (556,566)"
"<anonymous> (562, 564)",0.000,0.000,0.000,0.000,false,false,"/blowfish (556,566)/<anonymous> (562,564)"
"block_size (326, 328)",0.000,0.000,0.000,0.000,false,false,"/Blowfish (325,339)/block_size (326,328)"
"decrypt_block (330, 338)",0.000,1.000,0.000,0.000,false,false,"/Blowfish (325,339)/decrypt_block (330,338)"
"block_size (310, 312)",0.000,0.000,0.000,0.000,false,false,"/Blowfish (309,323)/block_size (310,312)"
"encrypt_block (314, 322)",0.000,1.000,0.000,0.000,false,false,"/Blowfish (309,323)/encrypt_block (314,322)"
"new (30, 35)",0.000,1.000,0.000,0.000,false,false,"/Blowfish (29,307)/new (30,35)"
"init_state (38, 216)",0.000,1.000,0.000,0.000,false,false,"/Blowfish (29,307)/init_state (38,216)"
"expand_key (219, 242)",4.792,0.958,5.000,0.000,false,false,"/Blowfish (29,307)/expand_key (219,242)"
"salted_expand_key (245, 275)",5.000,1.000,5.000,0.000,false,false,"/Blowfish (29,307)/salted_expand_key (245,275)"
"round_function (277, 279)",0.000,1.000,0.000,0.000,false,false,"/Blowfish (29,307)/round_function (277,279)"
"encrypt (282, 292)",1.000,1.000,1.000,0.000,false,false,"/Blowfish (29,307)/encrypt (282,292)"
"decrypt (294, 306)",1.000,1.000,1.000,0.000,false,false,"/Blowfish (29,307)/decrypt (294,306)"
buffer.rs,0.000,0.471,0.000,0.000,false,false,src/buffer.rs
"is_empty (266, 266)",0.000,1.000,0.000,0.000,false,false,"/OwnedWriteBuffer (265,288)/is_empty (266,266)"
"is_full (267, 267)",0.000,1.000,0.000,0.000,false,false,"/OwnedWriteBuffer (265,288)/is_full (267,267)"
"remaining (268, 268)",0.000,1.000,0.000,0.000,false,false,"/OwnedWriteBuffer (265,288)/remaining (268,268)"
"capacity (269, 269)",0.000,0.000,0.000,0.000,false,false,"/OwnedWriteBuffer (265,288)/capacity (269,269)"
"rewind (271, 271)",0.000,0.000,0.000,0.000,false,false,"/OwnedWriteBuffer (265,288)/rewind (271,271)"
"reset (272, 272)",0.000,0.000,0.000,0.000,false,false,"/OwnedWriteBuffer (265,288)/reset (272,272)"
"peek_read_buffer (274, 276)",0.000,0.000,0.000,0.000,false,false,"/OwnedWriteBuffer (265,288)/peek_read_buffer (274,276)"
"take_next (278, 282)",0.000,1.000,0.000,0.000,false,false,"/OwnedWriteBuffer (265,288)/take_next (278,282)"
"take_read_buffer (283, 287)",0.000,1.000,0.000,0.000,false,false,"/OwnedWriteBuffer (265,288)/take_read_buffer (283,287)"
"new (251, 258)",0.000,1.000,0.000,0.000,false,false,"/OwnedWriteBuffer (250,263)/new (251,258)"
"into_read_buffer (259, 262)",0.000,1.000,0.000,0.000,false,false,"/OwnedWriteBuffer (250,263)/into_read_buffer (259,262)"
"is_empty (212, 212)",0.000,0.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (211,242)/is_empty (212,212)"
"is_full (213, 213)",0.000,0.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (211,242)/is_full (213,213)"
"remaining (214, 214)",0.000,1.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (211,242)/remaining (214,214)"
"capacity (215, 215)",0.000,0.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (211,242)/capacity (215,215)"
"rewind (217, 220)",0.000,0.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (211,242)/rewind (217,220)"
"reset (221, 224)",0.000,0.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (211,242)/reset (221,224)"
"peek_read_buffer (226, 228)",0.000,0.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (211,242)/peek_read_buffer (226,228)"
"take_next (230, 235)",0.000,1.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (211,242)/take_next (230,235)"
"take_read_buffer (236, 241)",0.000,0.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (211,242)/take_read_buffer (236,241)"
"new (201, 208)",0.000,1.000,0.000,0.000,false,false,"/BorrowedWriteBuffer<'a> (200,209)/new (201,208)"
"is_empty (170, 170)",0.000,0.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (169,192)/is_empty (170,170)"
"is_full (171, 171)",0.000,1.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (169,192)/is_full (171,171)"
"remaining (172, 172)",0.000,1.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (169,192)/remaining (172,172)"
"capacity (173, 173)",0.000,1.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (169,192)/capacity (173,173)"
"rewind (175, 175)",0.000,1.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (169,192)/rewind (175,175)"
"reset (176, 176)",0.000,0.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (169,192)/reset (176,176)"
"peek_read_buffer (178, 180)",0.000,0.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (169,192)/peek_read_buffer (178,180)"
"take_next (182, 186)",0.000,1.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (169,192)/take_next (182,186)"
"take_read_buffer (187, 191)",0.000,0.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (169,192)/take_read_buffer (187,191)"
"new (159, 166)",0.000,1.000,0.000,0.000,false,false,"/RefWriteBuffer<'a> (158,167)/new (159,166)"
"is_empty (134, 134)",0.000,1.000,0.000,0.000,false,false,"/OwnedReadBuffer (133,150)/is_empty (134,134)"
"is_full (135, 135)",0.000,0.000,0.000,0.000,false,false,"/OwnedReadBuffer (133,150)/is_full (135,135)"
"remaining (136, 136)",0.000,1.000,0.000,0.000,false,false,"/OwnedReadBuffer (133,150)/remaining (136,136)"
"capacity (137, 137)",0.000,0.000,0.000,0.000,false,false,"/OwnedReadBuffer (133,150)/capacity (137,137)"
"rewind (139, 139)",0.000,0.000,0.000,0.000,false,false,"/OwnedReadBuffer (133,150)/rewind (139,139)"
"truncate (140, 140)",0.000,1.000,0.000,0.000,false,false,"/OwnedReadBuffer (133,150)/truncate (140,140)"
"reset (141, 141)",0.000,0.000,0.000,0.000,false,false,"/OwnedReadBuffer (133,150)/reset (141,141)"
"peek_next (143, 143)",0.000,1.000,0.000,0.000,false,false,"/OwnedReadBuffer (133,150)/peek_next (143,143)"
"take_next (145, 149)",0.000,1.000,0.000,0.000,false,false,"/OwnedReadBuffer (133,150)/take_next (145,149)"
"new (108, 115)",0.000,0.000,0.000,0.000,false,false,"/OwnedReadBuffer (107,131)/new (108,115)"
"new_with_len (116, 122)",0.000,1.000,0.000,0.000,false,false,"/OwnedReadBuffer (107,131)/new_with_len (116,122)"
"into_write_buffer (123, 125)",0.000,1.000,0.000,0.000,false,false,"/OwnedReadBuffer (107,131)/into_write_buffer (123,125)"
"borrow_write_buffer (126, 130)",0.000,1.000,0.000,0.000,false,false,"/OwnedReadBuffer (107,131)/borrow_write_buffer (126,130)"
"is_empty (81, 81)",0.000,1.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (80,99)/is_empty (81,81)"
"is_full (82, 82)",0.000,0.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (80,99)/is_full (82,82)"
"remaining (83, 83)",0.000,1.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (80,99)/remaining (83,83)"
"capacity (84, 84)",0.000,1.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (80,99)/capacity (84,84)"
"rewind (86, 86)",0.000,1.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (80,99)/rewind (86,86)"
"truncate (87, 89)",0.000,0.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (80,99)/truncate (87,89)"
"reset (90, 90)",0.000,0.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (80,99)/reset (90,90)"
"peek_next (92, 92)",0.000,0.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (80,99)/peek_next (92,92)"
"take_next (94, 98)",0.000,1.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (80,99)/take_next (94,98)"
"new (72, 77)",0.000,1.000,0.000,0.000,false,false,"/RefReadBuffer<'a> (71,78)/new (72,77)"
"position (50, 50)",0.000,1.000,0.000,0.000,false,false,"/WriteBuffer (45,64)/position (50,50)"
"take_remaining (59, 62)",0.000,1.000,0.000,0.000,false,false,"/WriteBuffer (45,64)/take_remaining (59,62)"
"position (22, 22)",0.000,1.000,0.000,0.000,false,false,"/ReadBuffer (17,43)/position (22,22)"
"peek_remaining (29, 31)",0.000,1.000,0.000,0.000,false,false,"/ReadBuffer (17,43)/peek_remaining (29,31)"
"take_remaining (34, 37)",0.000,1.000,0.000,0.000,false,false,"/ReadBuffer (17,43)/take_remaining (34,37)"
"push_to (39, 42)",0.000,1.000,0.000,0.000,false,false,"/ReadBuffer (17,43)/push_to (39,42)"
build.rs,5.310,0.483,22.896,20.308,false,false,build.rs
"main (12, 40)",5.923,0.538,22.896,20.308,false,false,"/main (12,40)"
chacha20.rs,11.377,0.758,15.017,2.556,false,false,src/chacha20.rs
"test_chacha20_256_tls_vectors (285, 417)",1.000,1.000,1.000,0.000,false,false,"/test_chacha20_256_tls_vectors (285,417)"
"test_xchacha20_basic (420, 458)",0.000,1.114,0.000,0.000,false,false,"/test_xchacha20_basic (420,458)"
"test_chacha20_256_tls_vectors_96_nonce (461, 593)",1.000,1.000,1.000,0.000,false,false,"/test_chacha20_256_tls_vectors_96_nonce (461,593)"
"chacha20_10 (603, 611)",0.000,0.000,0.000,0.000,false,false,"/chacha20_10 (603,611)"
"chacha20_1k (614, 622)",0.000,0.000,0.000,0.000,false,false,"/chacha20_1k (614,622)"
"chacha20_64k (625, 633)",0.000,0.000,0.000,0.000,false,false,"/chacha20_64k (625,633)"
"<anonymous> (629, 631)",0.000,0.000,0.000,0.000,false,false,"/chacha20_64k (625,633)/<anonymous> (629,631)"
"<anonymous> (618, 620)",0.000,0.000,0.000,0.000,false,false,"/chacha20_1k (614,622)/<anonymous> (618,620)"
"<anonymous> (607, 609)",0.000,0.000,0.000,0.000,false,false,"/chacha20_10 (603,611)/<anonymous> (607,609)"
"decrypt (271, 274)",0.000,0.000,0.000,0.000,false,false,"/ChaCha20 (270,275)/decrypt (271,274)"
"encrypt (264, 267)",0.000,0.000,0.000,0.000,false,false,"/ChaCha20 (263,268)/encrypt (264,267)"
"process (243, 260)",2.786,0.929,3.000,0.000,false,false,"/ChaCha20 (242,261)/process (243,260)"
"new (88, 93)",0.000,1.000,0.000,0.000,false,false,"/ChaCha20 (87,240)/new (88,93)"
"new_xchacha20 (95, 114)",0.000,1.444,0.000,0.000,false,false,"/ChaCha20 (87,240)/new_xchacha20 (95,114)"
"expand (116, 174)",4.448,0.741,6.139,3.765,false,false,"/ChaCha20 (87,240)/expand (116,174)"
"hchacha20 (176, 210)",2.000,1.000,2.000,0.000,false,false,"/ChaCha20 (87,240)/hchacha20 (176,210)"
"update (213, 239)",2.100,1.050,2.000,0.364,false,false,"/ChaCha20 (87,240)/update (213,239)"
"clone (28, 28)",0.000,0.000,0.000,0.000,false,false,"/ChaCha20 (28,28)/clone (28,28)"
chacha20poly1305.rs,20.178,2.522,8.000,0.094,false,true,src/chacha20poly1305.rs
"test_chacha20_256_poly1305_boringssl_vectors_encrypt (104, 117)",2.769,0.923,3.000,0.000,false,false,"/test_chacha20_256_poly1305_boringssl_vectors_encrypt (104,117)"
"test_chacha20_256_poly1305_boringssl_vectors_decrypt (119, 131)",2.750,0.917,3.000,0.000,false,false,"/test_chacha20_256_poly1305_boringssl_vectors_decrypt (119,131)"
"get_test_vectors (132, 735)",0.000,5.593,0.000,0.000,false,true,"/get_test_vectors (132,735)"
"chacha20poly1305_10 (745, 760)",0.000,0.000,0.000,0.000,false,false,"/chacha20poly1305_10 (745,760)"
"chacha20poly1305_1k (764, 780)",0.000,0.000,0.000,0.000,false,false,"/chacha20poly1305_1k (764,780)"
"chacha20poly1305_64k (783, 800)",0.000,0.000,0.000,0.000,false,false,"/chacha20poly1305_64k (783,800)"
"<anonymous> (786, 797)",0.000,0.000,0.000,0.000,false,false,"/chacha20poly1305_64k (783,800)/<anonymous> (786,797)"
"<anonymous> (767, 777)",0.000,0.000,0.000,0.000,false,false,"/chacha20poly1305_1k (764,780)/<anonymous> (767,777)"
"<anonymous> (748, 758)",0.000,0.000,0.000,0.000,false,false,"/chacha20poly1305_10 (745,760)/<anonymous> (748,758)"
"decrypt (64, 86)",2.111,1.056,2.001,0.400,false,false,"/ChaCha20Poly1305 (63,87)/decrypt (64,86)"
"encrypt (49, 60)",0.000,1.000,0.000,0.000,false,false,"/ChaCha20Poly1305 (48,61)/encrypt (49,60)"
"new (24, 45)",0.000,1.050,0.000,0.000,false,false,"/ChaCha20Poly1305 (23,46)/new (24,45)"
cryptoutil.rs,19.938,0.767,26.120,5.846,false,false,src/cryptoutil.rs
"write_u64_be (21, 28)",0.000,1.000,0.000,0.000,false,false,"/write_u64_be (21,28)"
"write_u64_le (32, 39)",0.000,1.000,0.000,0.000,false,false,"/write_u64_le (32,39)"
"write_u64v_le (42, 54)",0.846,0.846,1.000,0.000,false,false,"/write_u64v_le (42,54)"
"write_u32_be (58, 65)",0.000,1.000,0.000,0.000,false,false,"/write_u32_be (58,65)"
"write_u32_le (69, 76)",0.000,1.000,0.000,0.000,false,false,"/write_u32_le (69,76)"
"write_u32v_le (79, 91)",0.846,0.846,1.000,0.000,false,false,"/write_u32v_le (79,91)"
"read_u64v_be (94, 107)",0.857,0.857,1.000,0.000,false,false,"/read_u64v_be (94,107)"
"read_u64v_le (110, 123)",0.857,0.857,1.000,0.000,false,false,"/read_u64v_le (110,123)"
"read_u32v_be (126, 139)",0.857,0.857,1.000,0.000,false,false,"/read_u32v_be (126,139)"
"read_u32v_le (142, 155)",0.857,0.857,1.000,0.000,false,false,"/read_u32v_le (142,155)"
"read_u32_le (158, 165)",0.000,0.875,0.000,0.000,false,false,"/read_u32_le (158,165)"
"read_u32_be (168, 175)",0.000,0.875,0.000,0.000,false,false,"/read_u32_be (168,175)"
"xor_keystream (178, 189)",1.000,1.000,1.000,0.000,false,false,"/xor_keystream (178,189)"
"copy_memory (193, 200)",0.000,1.000,0.000,0.000,false,false,"/copy_memory (193,200)"
"zero (204, 208)",0.000,1.000,0.000,0.000,false,false,"/zero (204,208)"
"symm_enc_or_dec (249, 261)",1.692,0.846,2.000,0.000,false,false,"/symm_enc_or_dec (249,261)"
"to_bits (265, 267)",0.000,1.000,0.000,0.000,false,false,"/to_bits (265,267)"
"add_bytes_to_bits (271, 279)",1.143,1.143,1.001,0.444,false,false,"/add_bytes_to_bits (271,279)"
"add_bytes_to_bits_tuple (283, 322)",8.556,0.778,11.011,2.000,false,false,"/add_bytes_to_bits_tuple (283,322)"
"test_digest_1million_random (524, 544)",4.235,1.059,4.000,0.000,false,false,"/test_digest_1million_random (524,544)"
"test_add_bytes_to_bits_ok (548, 550)",0.000,1.000,0.000,0.000,false,false,"/test_add_bytes_to_bits_ok (548,550)"
"test_add_bytes_to_bits_overflow (555, 557)",0.000,1.000,0.000,0.000,false,false,"/test_add_bytes_to_bits_overflow (555,557)"
"test_add_bytes_to_bits_tuple_ok (561, 563)",0.000,1.000,0.000,0.000,false,false,"/test_add_bytes_to_bits_tuple_ok (561,563)"
"test_add_bytes_to_bits_tuple_ok2 (567, 569)",0.000,1.000,0.000,0.000,false,false,"/test_add_bytes_to_bits_tuple_ok2 (567,569)"
"test_add_bytes_to_bits_tuple_ok3 (573, 575)",0.000,1.000,0.000,0.000,false,false,"/test_add_bytes_to_bits_tuple_ok3 (573,575)"
"test_add_bytes_to_bits_tuple_overflow (580, 582)",0.000,1.000,0.000,0.000,false,false,"/test_add_bytes_to_bits_tuple_overflow (580,582)"
"test_add_bytes_to_bits_tuple_overflow2 (588, 591)",0.000,1.000,0.000,0.000,false,false,"/test_add_bytes_to_bits_tuple_overflow2 (588,591)"
"standard_padding (496, 507)",1.222,1.222,1.000,0.000,false,false,"/T (495,508)/standard_padding (496,507)"
"new (474, 479)",0.000,1.000,0.000,0.000,false,false,"/FixedBuffer128 (472,480)/new (474,479)"
"clone (470, 470)",0.000,0.000,0.000,0.000,false,false,"/FixedBuffer128 (470,470)/clone (470,470)"
"new (453, 458)",0.000,1.000,0.000,0.000,false,false,"/FixedBuffer64 (451,459)/new (453,458)"
"clone (449, 449)",0.000,0.000,0.000,0.000,false,false,"/FixedBuffer64 (449,449)/clone (449,449)"
"write_u8 (221, 224)",0.000,1.000,0.000,0.000,false,false,"/T (220,245)/write_u8 (221,224)"
"write_u32_le (225, 229)",0.000,1.000,0.000,0.000,false,false,"/T (220,245)/write_u32_le (225,229)"
"write_u32_be (230, 234)",0.000,0.000,0.000,0.000,false,false,"/T (220,245)/write_u32_be (230,234)"
"write_u64_le (235, 239)",0.000,1.000,0.000,0.000,false,false,"/T (220,245)/write_u64_le (235,239)"
"write_u64_be (240, 244)",0.000,0.000,0.000,0.000,false,false,"/T (220,245)/write_u64_be (240,244)"
curve25519.rs,34.571,0.603,58.000,0.852,false,true,src/curve25519.rs
"load_4u (33, 38)",0.000,1.000,0.000,0.000,false,false,"/load_4u (33,38)"
"load_4i (39, 41)",0.000,1.000,0.000,0.000,false,false,"/load_4i (39,41)"
"load_3u (42, 46)",0.000,1.000,0.000,0.000,false,false,"/load_3u (42,46)"
"load_3i (47, 49)",0.000,1.000,0.000,0.000,false,false,"/load_3i (47,49)"
"equal (1398, 1404)",0.000,1.000,0.000,0.000,false,false,"/equal (1398,1404)"
"ge_scalarmult_base (1453, 1495)",3.882,0.971,4.000,0.000,false,false,"/ge_scalarmult_base (1453,1495)"
"sc_reduce (1505, 1744)",0.000,1.159,0.000,0.000,false,false,"/sc_reduce (1505,1744)"
"sc_muladd (1757, 2088)",0.000,1.122,0.000,0.000,false,false,"/sc_muladd (1757,2088)"
"curve25519 (2091, 2150)",1.926,0.963,2.000,0.000,false,false,"/curve25519 (2091,2150)"
"curve25519_base (2152, 2156)",0.000,1.000,0.000,0.000,false,false,"/curve25519_base (2152,2156)"
"from_to_bytes_preserves (2163, 2173)",0.909,0.909,1.000,0.000,false,false,"/from_to_bytes_preserves (2163,2173)"
"swap_test (2176, 2188)",0.000,1.000,0.000,0.000,false,false,"/swap_test (2176,2188)"
"mul_commutes (2211, 2215)",0.800,0.800,1.000,0.000,false,false,"/mul_commutes (2211,2215)"
"mul_assoc (2218, 2222)",0.800,0.800,1.000,0.000,false,false,"/mul_assoc (2218,2222)"
"invert_inverts (2225, 2229)",0.800,0.800,1.000,0.000,false,false,"/invert_inverts (2225,2229)"
"square_by_mul (2232, 2236)",0.800,0.800,1.000,0.000,false,false,"/square_by_mul (2232,2236)"
"base_example (2239, 2251)",0.000,1.000,0.000,0.000,false,false,"/base_example (2239,2251)"
"next (2201, 2207)",0.000,1.000,0.000,0.000,false,false,"/CurveGen (2198,2208)/next (2201,2207)"
"<anonymous> (2202, 2202)",0.000,1.000,0.000,0.000,false,false,"/CurveGen (2198,2208)/next (2201,2207)/<anonymous> (2202,2202)"
"new (2194, 2196)",0.000,1.000,0.000,0.000,false,false,"/CurveGen (2193,2197)/new (2194,2196)"
"<anonymous> (2165, 2165)",0.000,1.000,0.000,0.000,false,false,"/from_to_bytes_preserves (2163,2173)/<anonymous> (2165,2165)"
"zero (1409, 1415)",0.000,1.000,0.000,0.000,false,false,"/GePrecomp (1408,1443)/zero (1409,1415)"
"maybe_set (1417, 1421)",0.000,1.000,0.000,0.000,false,false,"/GePrecomp (1408,1443)/maybe_set (1417,1421)"
"select (1423, 1442)",0.000,1.000,0.000,0.000,false,false,"/GePrecomp (1408,1443)/select (1423,1442)"
"sub (1382, 1395)",0.000,1.077,0.000,0.000,false,false,"/GeP3 (1379,1396)/sub (1382,1395)"
"sub (1362, 1376)",0.000,1.071,0.000,0.000,false,false,"/GeP3 (1359,1377)/sub (1362,1376)"
"add (1343, 1356)",0.000,1.077,0.000,0.000,false,false,"/GeP3 (1340,1357)/add (1343,1356)"
"add (1323, 1337)",0.000,1.071,0.000,0.000,false,false,"/GeP3 (1320,1338)/add (1323,1337)"
"from_bytes_negate_vartime (1247, 1276)",4.480,1.120,4.000,0.000,false,false,"/GeP3 (1246,1318)/from_bytes_negate_vartime (1247,1276)"
"to_p2 (1278, 1284)",0.000,1.000,0.000,0.000,false,false,"/GeP3 (1246,1318)/to_p2 (1278,1284)"
"to_cached (1286, 1293)",0.000,1.000,0.000,0.000,false,false,"/GeP3 (1246,1318)/to_cached (1286,1293)"
"zero (1295, 1302)",0.000,1.000,0.000,0.000,false,false,"/GeP3 (1246,1318)/zero (1295,1302)"
"dbl (1304, 1306)",0.000,1.000,0.000,0.000,false,false,"/GeP3 (1246,1318)/dbl (1304,1306)"
"to_bytes (1308, 1315)",2.000,1.000,2.000,0.000,false,false,"/GeP3 (1246,1318)/to_bytes (1308,1315)"
"zero (1125, 1131)",0.000,1.000,0.000,0.000,false,false,"/GeP2 (1124,1244)/zero (1125,1131)"
"to_bytes (1133, 1140)",2.000,1.000,2.000,0.000,false,false,"/GeP2 (1124,1244)/to_bytes (1133,1140)"
"dbl (1142, 1154)",0.000,1.083,0.000,0.000,false,false,"/GeP2 (1124,1244)/dbl (1142,1154)"
"slide (1156, 1185)",25.655,1.655,31.000,0.000,false,true,"/GeP2 (1124,1244)/slide (1156,1185)"
"double_scalarmult_vartime (1193, 1242)",7.814,0.977,8.001,0.744,false,false,"/GeP2 (1124,1244)/double_scalarmult_vartime (1193,1242)"
"to_p2 (1104, 1110)",0.000,1.000,0.000,0.000,false,false,"/GeP1P1 (1103,1122)/to_p2 (1104,1110)"
"to_p3 (1113, 1120)",0.000,1.000,0.000,0.000,false,false,"/GeP1P1 (1103,1122)/to_p3 (1113,1120)"
"from_bytes (404, 430)",0.000,1.125,0.000,0.000,false,false,"/Fe (403,1063)/from_bytes (404,430)"
"to_bytes (457, 539)",0.000,1.186,0.000,0.000,false,false,"/Fe (403,1063)/to_bytes (457,539)"
"maybe_swap_with (541, 589)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/maybe_swap_with (541,589)"
"maybe_set (591, 637)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/maybe_set (591,637)"
"mul_121666 (650, 678)",0.000,1.160,0.000,0.000,false,false,"/Fe (403,1063)/mul_121666 (650,678)"
"square (695, 808)",0.000,1.086,0.000,0.000,false,false,"/Fe (403,1063)/square (695,808)"
"square_and_double (810, 944)",0.000,1.080,0.000,0.000,false,false,"/Fe (403,1063)/square_and_double (810,944)"
"invert (946, 1018)",0.000,2.808,0.000,0.000,false,true,"/Fe (403,1063)/invert (946,1018)"
"is_nonzero (1021, 1025)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/is_nonzero (1021,1025)"
"is_negative (1027, 1029)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/is_negative (1027,1029)"
"neg (1031, 1035)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/neg (1031,1035)"
"pow25523 (1037, 1062)",0.000,1.040,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)"
"<anonymous> (1039, 1039)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)/<anonymous> (1039,1039)"
"<anonymous> (1044, 1044)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)/<anonymous> (1044,1044)"
"<anonymous> (1046, 1046)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)/<anonymous> (1046,1046)"
"<anonymous> (1048, 1048)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)/<anonymous> (1048,1048)"
"<anonymous> (1050, 1050)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)/<anonymous> (1050,1050)"
"<anonymous> (1052, 1052)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)/<anonymous> (1052,1052)"
"<anonymous> (1054, 1054)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)/<anonymous> (1054,1054)"
"<anonymous> (1056, 1056)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)/<anonymous> (1056,1056)"
"<anonymous> (1058, 1058)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/pow25523 (1037,1062)/<anonymous> (1058,1058)"
"<anonymous> (966, 966)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/invert (946,1018)/<anonymous> (966,966)"
"<anonymous> (972, 972)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/invert (946,1018)/<anonymous> (972,972)"
"<anonymous> (978, 978)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/invert (946,1018)/<anonymous> (978,978)"
"<anonymous> (984, 984)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/invert (946,1018)/<anonymous> (984,984)"
"<anonymous> (990, 990)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/invert (946,1018)/<anonymous> (990,990)"
"<anonymous> (996, 996)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/invert (946,1018)/<anonymous> (996,996)"
"<anonymous> (1004, 1004)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/invert (946,1018)/<anonymous> (1004,1004)"
"<anonymous> (1010, 1010)",0.000,1.000,0.000,0.000,false,false,"/Fe (403,1063)/invert (946,1018)/<anonymous> (1010,1010)"
"mul (190, 400)",0.000,1.227,0.000,0.000,false,false,"/Fe (155,401)/mul (190,400)"
"sub (117, 152)",0.000,1.029,0.000,0.000,false,false,"/Fe (103,153)/sub (117,152)"
"add (65, 100)",0.000,1.029,0.000,0.000,false,false,"/Fe (51,101)/add (65,100)"
"eq (18, 22)",0.000,1.000,0.000,0.000,false,false,"/Fe (17,23)/eq (18,22)"
digest.rs,0.000,0.650,0.000,0.000,false,false,src/digest.rs
"output_bytes (50, 52)",0.000,1.000,0.000,0.000,false,false,"/Digest (17,81)/output_bytes (50,52)"
"input_str (66, 68)",0.000,1.000,0.000,0.000,false,false,"/Digest (17,81)/input_str (66,68)"
"result_str (74, 80)",0.000,1.167,0.000,0.000,false,false,"/Digest (17,81)/result_str (74,80)"
ed25519.rs,11.000,1.000,11.000,0.368,false,false,src/ed25519.rs
"keypair (13, 34)",2.095,1.048,2.000,0.000,false,false,"/keypair (13,34)"
"signature (36, 80)",2.146,1.073,2.000,0.000,false,false,"/signature (36,80)"
"check_s_lt_l (82, 99)",2.000,1.000,2.000,0.000,false,false,"/check_s_lt_l (82,99)"
"verify (101, 130)",4.000,1.000,4.006,1.143,false,false,"/verify (101,130)"
"exchange (132, 151)",0.000,1.538,0.000,0.000,false,true,"/exchange (132,151)"
"edwards_to_montgomery_x (153, 162)",0.000,1.250,0.000,0.000,false,false,"/edwards_to_montgomery_x (153,162)"
"do_keypair_case (171, 175)",0.000,1.000,0.000,0.000,false,false,"/do_keypair_case (171,175)"
"keypair_cases (178, 197)",0.000,1.000,0.000,0.000,false,false,"/keypair_cases (178,197)"
"keypair_matches_mont (200, 219)",0.000,1.250,0.000,0.000,false,false,"/keypair_matches_mont (200,219)"
"do_sign_verify_case (221, 236)",0.929,0.929,1.000,0.000,false,false,"/do_sign_verify_case (221,236)"
"sign_verify_cases (239, 276)",0.000,1.027,0.000,0.000,false,false,"/sign_verify_cases (239,276)"
fortuna.rs,9.856,0.821,12.000,0.168,false,false,src/fortuna.rs
"test_force_reseed (268, 270)",0.000,1.000,0.000,0.000,false,false,"/test_force_reseed (268,270)"
"test_create_unseeded (279, 281)",0.000,1.000,0.000,0.000,false,false,"/test_create_unseeded (279,281)"
"test_use_unseeded (285, 288)",0.000,1.000,0.000,0.000,false,false,"/test_use_unseeded (285,288)"
"test_badly_seeded (292, 296)",0.000,1.000,0.000,0.000,false,false,"/test_badly_seeded (292,296)"
"test_too_big_event (300, 303)",0.000,1.000,0.000,0.000,false,false,"/test_too_big_event (300,303)"
"test_seeded (306, 343)",0.000,1.231,0.000,0.000,false,false,"/test_seeded (306,343)"
"test_generator_correctness (346, 394)",0.000,1.093,0.000,0.000,false,false,"/test_generator_correctness (346,394)"
"test_accumulator_correctness (397, 468)",1.224,1.224,1.000,0.000,false,false,"/test_accumulator_correctness (397,468)"
"fortuna_new_32 (479, 485)",0.000,0.000,0.000,0.000,false,false,"/fortuna_new_32 (479,485)"
"fortuna_new_64 (488, 494)",0.000,0.000,0.000,0.000,false,false,"/fortuna_new_64 (488,494)"
"fortuna_new_1k (497, 504)",0.000,0.000,0.000,0.000,false,false,"/fortuna_new_1k (497,504)"
"fortuna_new_64k (507, 514)",0.000,0.000,0.000,0.000,false,false,"/fortuna_new_64k (507,514)"
"<anonymous> (510, 512)",0.000,0.000,0.000,0.000,false,false,"/fortuna_new_64k (507,514)/<anonymous> (510,512)"
"<anonymous> (500, 502)",0.000,0.000,0.000,0.000,false,false,"/fortuna_new_1k (497,504)/<anonymous> (500,502)"
"<anonymous> (490, 492)",0.000,0.000,0.000,0.000,false,false,"/fortuna_new_64 (488,494)/<anonymous> (490,492)"
"<anonymous> (481, 483)",0.000,0.000,0.000,0.000,false,false,"/fortuna_new_32 (479,485)/<anonymous> (481,483)"
"from_seed (254, 258)",0.000,1.000,0.000,0.000,false,false,"/Fortuna (253,265)/from_seed (254,258)"
"reseed (260, 264)",0.000,1.000,0.000,0.000,false,false,"/Fortuna (253,265)/reseed (260,264)"
"fill_bytes (217, 243)",6.261,1.043,6.000,0.000,false,false,"/Fortuna (209,250)/fill_bytes (217,243)"
"next_u32 (245, 249)",0.000,1.000,0.000,0.000,false,false,"/Fortuna (209,250)/next_u32 (245,249)"
"new_unseeded (188, 195)",0.000,1.000,0.000,0.000,false,false,"/Fortuna (186,207)/new_unseeded (188,195)"
"add_random_event (198, 206)",0.000,1.000,0.000,0.000,false,false,"/Fortuna (186,207)/add_random_event (198,206)"
"new (157, 159)",0.000,1.000,0.000,0.000,false,false,"/Pool (156,176)/new (157,159)"
"input (161, 164)",0.000,1.000,0.000,0.000,false,false,"/Pool (156,176)/input (161,164)"
"result (166, 175)",0.000,1.250,0.000,0.000,false,false,"/Pool (156,176)/result (166,175)"
"new (81, 86)",0.000,1.000,0.000,0.000,false,false,"/FortunaGenerator (79,146)/new (81,86)"
"increment_counter (89, 97)",3.000,1.000,3.000,0.000,false,false,"/FortunaGenerator (79,146)/increment_counter (89,97)"
"reseed (100, 111)",0.000,1.200,0.000,0.000,false,false,"/FortunaGenerator (79,146)/reseed (100,111)"
"generate_blocks (115, 126)",1.000,1.000,1.000,0.000,false,false,"/FortunaGenerator (79,146)/generate_blocks (115,126)"
"generate_random_data (129, 145)",1.000,1.000,1.000,0.000,false,false,"/FortunaGenerator (79,146)/generate_random_data (129,145)"
ghash.rs,4.421,0.340,15.226,12.281,false,false,src/ghash.rs
"update (125, 159)",4.333,0.867,5.028,2.069,false,false,"/update (125,159)"
"hash (511, 516)",0.833,0.833,1.000,0.000,false,false,"/hash (511,516)"
"split_input (519, 530)",0.917,0.917,1.000,0.000,false,false,"/split_input (519,530)"
"ghash_10 (540, 550)",0.000,0.000,0.000,0.000,false,false,"/ghash_10 (540,550)"
"ghash_1k (553, 563)",0.000,0.000,0.000,0.000,false,false,"/ghash_1k (553,563)"
"ghash_64k (566, 576)",0.000,0.000,0.000,0.000,false,false,"/ghash_64k (566,576)"
"<anonymous> (570, 574)",0.000,0.000,0.000,0.000,false,false,"/ghash_64k (566,576)/<anonymous> (570,574)"
"<anonymous> (557, 561)",0.000,0.000,0.000,0.000,false,false,"/ghash_1k (553,563)/<anonymous> (557,561)"
"<anonymous> (544, 548)",0.000,0.000,0.000,0.000,false,false,"/ghash_10 (540,550)/<anonymous> (544,548)"
"input (260, 263)",0.000,0.000,0.000,0.000,false,false,"/Ghash (259,294)/input (260,263)"
"reset (265, 270)",0.000,0.000,0.000,0.000,false,false,"/Ghash (259,294)/reset (265,270)"
"result (272, 276)",0.000,0.000,0.000,0.000,false,false,"/Ghash (259,294)/result (272,276)"
"raw_result (278, 291)",0.000,0.000,2.000,4.000,false,false,"/Ghash (259,294)/raw_result (278,291)"
"output_bytes (293, 293)",0.000,0.000,0.000,0.000,false,false,"/Ghash (259,294)/output_bytes (293,293)"
"input_c (237, 240)",0.000,1.000,0.000,0.000,false,false,"/GhashWithC (234,257)/input_c (237,240)"
"result (244, 256)",1.091,1.091,1.000,0.000,false,false,"/GhashWithC (234,257)/result (244,256)"
"new (164, 182)",1.125,1.125,1.000,0.000,false,false,"/Ghash (161,232)/new (164,182)"
"flush (184, 188)",1.000,1.000,1.000,0.000,false,false,"/Ghash (161,232)/flush (184,188)"
"input_a (192, 196)",0.000,1.000,0.000,0.000,false,false,"/Ghash (161,232)/input_a (192,196)"
"input_c (200, 215)",0.000,1.143,0.000,0.000,false,false,"/Ghash (161,232)/input_c (200,215)"
"result (219, 231)",0.000,0.000,2.000,4.000,false,false,"/Ghash (161,232)/result (219,231)"
"clone (123, 123)",0.000,0.000,0.000,0.000,false,false,"/GhashWithC (123,123)/clone (123,123)"
"clone (111, 111)",0.000,0.000,0.000,0.000,false,false,"/Ghash (111,111)/clone (111,111)"
"bitxor (96, 98)",0.000,1.000,0.000,0.000,false,false,"/Gf128 (93,99)/bitxor (96,98)"
"new (32, 34)",0.000,1.000,0.000,0.000,false,false,"/Gf128 (31,91)/new (32,34)"
"from_bytes (36, 43)",0.000,1.000,0.000,0.000,false,false,"/Gf128 (31,91)/from_bytes (36,43)"
"to_bytes (45, 55)",0.000,1.222,0.000,0.000,false,false,"/Gf128 (31,91)/to_bytes (45,55)"
"times_x (59, 62)",0.000,1.000,0.000,0.000,false,false,"/Gf128 (31,91)/times_x (59,62)"
"times_x_reduce (67, 70)",0.000,1.000,0.000,0.000,false,false,"/Gf128 (31,91)/times_x_reduce (67,70)"
"add_and_mul (73, 81)",1.000,1.000,1.000,0.000,false,false,"/Gf128 (31,91)/add_and_mul (73,81)"
"cond_xor (84, 90)",0.000,1.000,0.000,0.000,false,false,"/Gf128 (31,91)/cond_xor (84,90)"
hc128.rs,13.154,0.692,20.336,11.757,false,false,src/hc128.rs
"f1 (110, 113)",0.000,1.000,0.000,0.000,false,false,"/f1 (110,113)"
"f2 (115, 118)",0.000,1.000,0.000,0.000,false,false,"/f2 (115,118)"
"test_hc128_ecrypt_set_2_vector_0 (190, 204)",0.000,1.250,0.000,0.000,false,false,"/test_hc128_ecrypt_set_2_vector_0 (190,204)"
"test_hc128_ecrypt_set_6_vector_1 (207, 222)",0.000,1.231,0.000,0.000,false,false,"/test_hc128_ecrypt_set_6_vector_1 (207,222)"
"test_hc128_ecrypt_set_6_vector_2 (225, 240)",0.000,1.231,0.000,0.000,false,false,"/test_hc128_ecrypt_set_6_vector_2 (225,240)"
"test_hc128_ecrypt_set_6_vector_3 (243, 256)",0.000,1.273,0.000,0.000,false,false,"/test_hc128_ecrypt_set_6_vector_3 (243,256)"
"hc128_10 (266, 274)",0.000,0.000,0.000,0.000,false,false,"/hc128_10 (266,274)"
"hc128_1k (277, 285)",0.000,0.000,0.000,0.000,false,false,"/hc128_1k (277,285)"
"hc128_64k (288, 296)",0.000,0.000,0.000,0.000,false,false,"/hc128_64k (288,296)"
"<anonymous> (292, 294)",0.000,0.000,0.000,0.000,false,false,"/hc128_64k (288,296)/<anonymous> (292,294)"
"<anonymous> (281, 283)",0.000,0.000,0.000,0.000,false,false,"/hc128_1k (277,285)/<anonymous> (281,283)"
"<anonymous> (270, 272)",0.000,0.000,0.000,0.000,false,false,"/hc128_10 (266,274)/<anonymous> (270,272)"
"decrypt (174, 177)",0.000,0.000,0.000,0.000,false,false,"/Hc128 (173,178)/decrypt (174,177)"
"encrypt (167, 170)",0.000,0.000,0.000,0.000,false,false,"/Hc128 (166,171)/encrypt (167,170)"
"process (121, 163)",8.462,0.769,14.617,13.655,false,false,"/Hc128 (120,164)/process (121,163)"
"new (27, 34)",0.000,1.143,0.000,0.000,false,false,"/Hc128 (26,108)/new (27,34)"
"init (36, 73)",5.167,1.033,5.000,0.000,false,false,"/Hc128 (26,108)/init (36,73)"
"step (75, 96)",2.471,1.235,2.000,0.000,false,false,"/Hc128 (26,108)/step (75,96)"
"next (98, 107)",0.000,0.000,2.000,4.000,false,false,"/Hc128 (26,108)/next (98,107)"
"clone (24, 24)",0.000,0.000,0.000,0.000,false,false,"/Hc128 (24,24)/clone (24,24)"
hkdf.rs,4.447,0.889,5.000,0.000,false,false,src/hkdf.rs
"hkdf_extract (26, 34)",0.000,1.125,0.000,0.000,false,false,"/hkdf_extract (26,34)"
"hkdf_expand (44, 67)",3.150,1.050,3.000,0.000,false,false,"/hkdf_expand (44,67)"
"test_hkdf_rfc5869_sha256_vectors (90, 166)",0.987,0.987,1.000,0.000,false,false,"/test_hkdf_rfc5869_sha256_vectors (90,166)"
"test_hkdf_rfc5869_sha1_vectors (169, 242)",0.986,0.986,1.000,0.000,false,false,"/test_hkdf_rfc5869_sha1_vectors (169,242)"
hmac.rs,6.761,0.845,8.000,0.000,false,false,src/hmac.rs
"derive_key (27, 31)",1.000,1.000,1.000,0.000,false,false,"/derive_key (27,31)"
"expand_key (36, 49)",2.154,1.077,2.000,0.000,false,false,"/expand_key (36,49)"
"create_keys (53, 59)",0.000,1.000,0.000,0.000,false,false,"/create_keys (53,59)"
"tests (137, 161)",0.000,1.000,0.000,0.000,false,false,"/tests (137,161)"
"test_hmac_md5 (164, 181)",1.067,1.067,1.000,0.000,false,false,"/test_hmac_md5 (164,181)"
"test_hmac_md5_incremental (184, 195)",2.750,0.917,3.000,0.000,false,false,"/test_hmac_md5_incremental (184,195)"
"input (83, 86)",0.000,1.000,0.000,0.000,false,false,"/Hmac<D> (82,118)/input (83,86)"
"reset (88, 92)",0.000,1.000,0.000,0.000,false,false,"/Hmac<D> (82,118)/reset (88,92)"
"result (94, 101)",0.000,1.333,0.000,0.000,false,false,"/Hmac<D> (82,118)/result (94,101)"
"raw_result (103, 115)",1.200,1.200,1.000,0.000,false,false,"/Hmac<D> (82,118)/raw_result (103,115)"
"output_bytes (117, 117)",0.000,1.000,0.000,0.000,false,false,"/Hmac<D> (82,118)/output_bytes (117,117)"
"new (70, 79)",0.000,1.000,0.000,0.000,false,false,"/Hmac<D> (61,80)/new (70,79)"
lib.rs,0.000,0.021,0.000,0.000,false,false,src/lib.rs
mac.rs,0.000,0.529,0.000,0.000,false,false,src/mac.rs
"eq (85, 89)",0.000,1.000,0.000,0.000,false,false,"/MacResult (84,90)/eq (85,89)"
"new (60, 64)",0.000,1.000,0.000,0.000,false,false,"/MacResult (56,82)/new (60,64)"
"new_from_owned (69, 73)",0.000,1.000,0.000,0.000,false,false,"/MacResult (56,82)/new_from_owned (69,73)"
"code (79, 81)",0.000,1.000,0.000,0.000,false,false,"/MacResult (56,82)/code (79,81)"
md5.rs,6.486,0.721,9.000,0.400,false,false,src/md5.rs
"test_hash (227, 253)",3.800,0.950,4.000,0.000,false,false,"/test_hash (227,253)"
"test_md5 (256, 278)",0.000,1.211,0.000,0.000,false,false,"/test_md5 (256,278)"
"test_1million_random_md5 (281, 287)",0.000,1.000,0.000,0.000,false,false,"/test_1million_random_md5 (281,287)"
"md5_10 (300, 307)",0.000,0.000,0.000,0.000,false,false,"/md5_10 (300,307)"
"md5_1k (310, 317)",0.000,0.000,0.000,0.000,false,false,"/md5_1k (310,317)"
"md5_64k (320, 327)",0.000,0.000,0.000,0.000,false,false,"/md5_64k (320,327)"
"<anonymous> (323, 325)",0.000,0.000,0.000,0.000,false,false,"/md5_64k (320,327)/<anonymous> (323,325)"
"<anonymous> (313, 315)",0.000,0.000,0.000,0.000,false,false,"/md5_1k (310,317)/<anonymous> (313,315)"
"<anonymous> (303, 305)",0.000,0.000,0.000,0.000,false,false,"/md5_10 (300,307)/<anonymous> (303,305)"
"input (176, 184)",0.000,1.000,0.000,0.000,false,false,"/Md5 (175,212)/input (176,184)"
"reset (186, 191)",0.000,1.000,0.000,0.000,false,false,"/Md5 (175,212)/reset (186,191)"
"result (193, 207)",1.000,1.000,1.000,0.000,false,false,"/Md5 (175,212)/result (193,207)"
"output_bits (209, 209)",0.000,1.000,0.000,0.000,false,false,"/Md5 (175,212)/output_bits (209,209)"
"block_size (211, 211)",0.000,1.000,0.000,0.000,false,false,"/Md5 (175,212)/block_size (211,211)"
"<anonymous> (196, 196)",0.000,1.000,0.000,0.000,false,false,"/Md5 (175,212)/result (193,207)/<anonymous> (196,196)"
"<anonymous> (182, 182)",0.000,1.000,0.000,0.000,false,false,"/Md5 (175,212)/input (176,184)/<anonymous> (182,182)"
"new (165, 172)",0.000,1.000,0.000,0.000,false,false,"/Md5 (163,173)/new (165,172)"
"new (26, 33)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/new (26,33)"
"reset (35, 40)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/reset (35,40)"
"process_block (42, 126)",4.606,1.152,4.000,0.000,false,false,"/Md5State (25,127)/process_block (42,126)"
"f (43, 45)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/process_block (42,126)/f (43,45)"
"g (47, 49)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/process_block (42,126)/g (47,49)"
"h (51, 53)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/process_block (42,126)/h (51,53)"
"i (55, 57)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/process_block (42,126)/i (55,57)"
"op_f (59, 61)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/process_block (42,126)/op_f (59,61)"
"op_g (63, 65)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/process_block (42,126)/op_g (63,65)"
"op_h (67, 69)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/process_block (42,126)/op_h (67,69)"
"op_i (71, 73)",0.000,1.000,0.000,0.000,false,false,"/Md5State (25,127)/process_block (42,126)/op_i (71,73)"
pbkdf2.rs,35.044,1.058,40.669,11.963,false,true,src/pbkdf2.rs
"calculate_block (33, 69)",6.800,1.133,6.000,0.000,false,false,"/calculate_block (33,69)"
"pbkdf2 (84, 110)",5.412,1.353,4.000,0.000,false,false,"/pbkdf2 (84,110)"
"pbkdf2_simple (132, 156)",0.000,1.353,0.000,0.000,false,false,"/pbkdf2_simple (132,156)"
"pbkdf2_check (168, 248)",18.421,1.474,31.859,22.222,false,false,"/pbkdf2_check (168,248)"
"tests (268, 315)",0.000,1.000,0.000,0.000,false,false,"/tests (268,315)"
"test_pbkdf2 (318, 326)",0.889,0.889,1.000,0.000,false,false,"/test_pbkdf2 (318,326)"
"test_pbkdf2_simple (329, 356)",3.273,0.818,4.096,2.909,false,false,"/test_pbkdf2_simple (329,356)"
poly1305.rs,12.393,0.885,14.012,2.203,false,false,src/poly1305.rs
"poly1305 (231, 235)",0.000,1.000,0.000,0.000,false,false,"/poly1305 (231,235)"
"test_nacl_vector (238, 289)",0.000,1.062,0.000,0.000,false,false,"/test_nacl_vector (238,289)"
"donna_self_test (292, 336)",1.128,1.128,1.000,0.000,false,false,"/donna_self_test (292,336)"
"test_tls_vectors (339, 358)",0.000,1.056,0.000,0.000,false,false,"/test_tls_vectors (339,358)"
"poly1305_10 (368, 378)",0.000,0.000,0.000,0.000,false,false,"/poly1305_10 (368,378)"
"poly1305_1k (381, 391)",0.000,0.000,0.000,0.000,false,false,"/poly1305_1k (381,391)"
"poly1305_64k (394, 404)",0.000,0.000,0.000,0.000,false,false,"/poly1305_64k (394,404)"
"<anonymous> (398, 402)",0.000,0.000,0.000,0.000,false,false,"/poly1305_64k (394,404)/<anonymous> (398,402)"
"<anonymous> (385, 389)",0.000,0.000,0.000,0.000,false,false,"/poly1305_1k (381,391)/<anonymous> (385,389)"
"<anonymous> (372, 376)",0.000,0.000,0.000,0.000,false,false,"/poly1305_10 (368,378)/<anonymous> (372,376)"
"input (164, 196)",8.346,1.192,7.000,0.000,false,false,"/Poly1305 (163,222)/input (164,196)"
"reset (198, 202)",0.000,0.000,0.000,0.000,false,false,"/Poly1305 (163,222)/reset (198,202)"
"result (204, 208)",0.000,0.000,0.000,0.000,false,false,"/Poly1305 (163,222)/result (204,208)"
"raw_result (210, 219)",1.000,1.000,1.000,0.000,false,false,"/Poly1305 (163,222)/raw_result (210,219)"
"output_bytes (221, 221)",0.000,0.000,0.000,0.000,false,false,"/Poly1305 (163,222)/output_bytes (221,221)"
"new (26, 43)",0.000,1.286,0.000,0.000,false,false,"/Poly1305 (25,161)/new (26,43)"
"block (45, 94)",2.450,1.225,2.000,0.000,false,false,"/Poly1305 (25,161)/block (45,94)"
"finish (96, 160)",3.566,1.189,3.000,0.000,false,false,"/Poly1305 (25,161)/finish (96,160)"
rc4.rs,1.705,0.426,4.044,2.250,false,false,src/rc4.rs
"tests (84, 103)",0.000,1.000,0.000,0.000,false,false,"/tests (84,103)"
"wikipedia_tests (106, 114)",0.889,0.889,1.000,0.000,false,false,"/wikipedia_tests (106,114)"
"rc4_10 (124, 132)",0.000,0.000,0.000,0.000,false,false,"/rc4_10 (124,132)"
"rc4_1k (135, 143)",0.000,0.000,0.000,0.000,false,false,"/rc4_1k (135,143)"
"rc4_64k (146, 154)",0.000,0.000,0.000,0.000,false,false,"/rc4_64k (146,154)"
"<anonymous> (150, 152)",0.000,0.000,0.000,0.000,false,false,"/rc4_64k (146,154)/<anonymous> (150,152)"
"<anonymous> (139, 141)",0.000,0.000,0.000,0.000,false,false,"/rc4_1k (135,143)/<anonymous> (139,141)"
"<anonymous> (128, 130)",0.000,0.000,0.000,0.000,false,false,"/rc4_10 (124,132)/<anonymous> (128,130)"
"decrypt (65, 68)",0.000,0.000,0.000,0.000,false,false,"/Rc4 (64,69)/decrypt (65,68)"
"encrypt (58, 61)",0.000,0.000,0.000,0.000,false,false,"/Rc4 (57,62)/encrypt (58,61)"
"process (49, 54)",1.000,1.000,1.000,0.000,false,false,"/Rc4 (48,55)/process (49,54)"
"new (26, 38)",2.000,1.000,2.000,0.000,false,false,"/Rc4 (25,46)/new (26,38)"
"next (39, 45)",0.000,1.000,0.000,0.000,false,false,"/Rc4 (25,46)/next (39,45)"
"clone (23, 23)",0.000,0.000,0.000,0.000,false,false,"/Rc4 (23,23)/clone (23,23)"
ripemd160.rs,3.753,0.751,5.000,0.185,false,false,src/ripemd160.rs
"circular_shift (43, 45)",0.000,1.000,0.000,0.000,false,false,"/circular_shift (43,45)"
"process_msg_block (147, 331)",0.000,1.114,0.000,0.000,false,false,"/process_msg_block (147,331)"
"test (427, 514)",4.213,1.053,4.000,0.000,false,false,"/test (427,514)"
"test_1million_random_ripemd160 (517, 523)",0.000,1.000,0.000,0.000,false,false,"/test_1million_random_ripemd160 (517,523)"
"ripemd160_10 (533, 540)",0.000,0.000,0.000,0.000,false,false,"/ripemd160_10 (533,540)"
"ripemd160_1k (543, 550)",0.000,0.000,0.000,0.000,false,false,"/ripemd160_1k (543,550)"
"ripemd160_64k (553, 560)",0.000,0.000,0.000,0.000,false,false,"/ripemd160_64k (553,560)"
"<anonymous> (556, 558)",0.000,0.000,0.000,0.000,false,false,"/ripemd160_64k (553,560)/<anonymous> (556,558)"
"<anonymous> (546, 548)",0.000,0.000,0.000,0.000,false,false,"/ripemd160_1k (543,550)/<anonymous> (546,548)"
"<anonymous> (536, 538)",0.000,0.000,0.000,0.000,false,false,"/ripemd160_10 (533,540)/<anonymous> (536,538)"
"reset (354, 363)",0.000,1.000,0.000,0.000,false,false,"/Ripemd160 (347,411)/reset (354,363)"
"input (369, 376)",0.000,1.000,0.000,0.000,false,false,"/Ripemd160 (347,411)/input (369,376)"
"result (382, 400)",1.200,1.200,1.000,0.000,false,false,"/Ripemd160 (347,411)/result (382,400)"
"output_bits (405, 405)",0.000,1.000,0.000,0.000,false,false,"/Ripemd160 (347,411)/output_bits (405,405)"
"block_size (410, 410)",0.000,0.000,0.000,0.000,false,false,"/Ripemd160 (347,411)/block_size (410,410)"
"<anonymous> (386, 386)",0.000,1.000,0.000,0.000,false,false,"/Ripemd160 (347,411)/result (382,400)/<anonymous> (386,386)"
"<anonymous> (374, 374)",0.000,1.000,0.000,0.000,false,false,"/Ripemd160 (347,411)/input (369,376)/<anonymous> (374,374)"
"new (335, 344)",0.000,1.000,0.000,0.000,false,false,"/Ripemd160 (333,345)/new (335,344)"
salsa20.rs,8.729,0.671,13.052,3.508,false,false,src/salsa20.rs
"columnround (68, 73)",0.000,1.000,0.000,0.000,false,false,"/columnround (68,73)"
"rowround (75, 80)",0.000,1.000,0.000,0.000,false,false,"/rowround (75,80)"
"hsalsa20 (248, 253)",0.000,0.000,0.000,0.000,false,false,"/hsalsa20 (248,253)"
"test_salsa20_128bit_ecrypt_set_1_vector_0 (266, 284)",0.000,1.056,0.000,0.000,false,false,"/test_salsa20_128bit_ecrypt_set_1_vector_0 (266,284)"
"test_salsa20_256bit_ecrypt_set_1_vector_0 (287, 307)",0.000,1.050,0.000,0.000,false,false,"/test_salsa20_256bit_ecrypt_set_1_vector_0 (287,307)"
"test_salsa20_256bit_nacl_vector_2 (310, 331)",0.000,1.100,0.000,0.000,false,false,"/test_salsa20_256bit_nacl_vector_2 (310,331)"
"test_xsalsa20_cryptopp (334, 369)",0.000,1.029,0.000,0.000,false,false,"/test_xsalsa20_cryptopp (334,369)"
"salsa20_10 (379, 387)",0.000,0.000,0.000,0.000,false,false,"/salsa20_10 (379,387)"
"salsa20_1k (390, 398)",0.000,0.000,0.000,0.000,false,false,"/salsa20_1k (390,398)"
"salsa20_64k (401, 409)",0.000,0.000,0.000,0.000,false,false,"/salsa20_64k (401,409)"
"<anonymous> (405, 407)",0.000,0.000,0.000,0.000,false,false,"/salsa20_64k (401,409)/<anonymous> (405,407)"
"<anonymous> (394, 396)",0.000,0.000,0.000,0.000,false,false,"/salsa20_1k (390,398)/<anonymous> (394,396)"
"<anonymous> (383, 385)",0.000,0.000,0.000,0.000,false,false,"/salsa20_10 (379,387)/<anonymous> (383,385)"
"decrypt (242, 245)",0.000,0.000,0.000,0.000,false,false,"/Salsa20 (241,246)/decrypt (242,245)"
"encrypt (235, 238)",0.000,0.000,0.000,0.000,false,false,"/Salsa20 (234,239)/encrypt (235,238)"
"process (214, 231)",2.786,0.929,3.000,0.000,false,false,"/Salsa20 (213,232)/process (214,231)"
"new (83, 87)",0.000,1.000,0.000,0.000,false,false,"/Salsa20 (82,211)/new (83,87)"
"new_xsalsa20 (89, 99)",0.000,1.222,0.000,0.000,false,false,"/Salsa20 (82,211)/new_xsalsa20 (89,99)"
"expand (101, 158)",4.681,0.936,5.000,0.444,false,false,"/Salsa20 (82,211)/expand (101,158)"
"hash (160, 189)",3.000,1.000,3.000,0.000,false,false,"/Salsa20 (82,211)/hash (160,189)"
"hsalsa20_hash (191, 210)",2.000,1.000,2.000,0.000,false,false,"/Salsa20 (82,211)/hsalsa20_hash (191,210)"
"clone (29, 29)",0.000,0.000,0.000,0.000,false,false,"/Salsa20 (29,29)/clone (29,29)"
scrypt.rs,44.915,1.017,51.579,12.364,false,true,src/scrypt.rs
"salsa20_8 (32, 87)",2.118,1.059,2.000,0.000,false,false,"/salsa20_8 (32,87)"
"xor (89, 93)",1.000,1.000,1.000,0.000,false,false,"/xor (89,93)"
"scrypt_block_mix (98, 110)",4.000,1.000,4.000,0.000,false,false,"/scrypt_block_mix (98,110)"
"scrypt_ro_mix (117, 140)",2.588,1.294,2.000,0.000,false,false,"/scrypt_ro_mix (117,140)"
"scrypt (223, 248)",1.294,1.294,1.000,0.000,false,false,"/scrypt (223,248)"
"scrypt_simple (272, 306)",3.536,1.179,3.000,0.000,false,false,"/scrypt_simple (272,306)"
"scrypt_check (318, 407)",21.940,1.463,36.852,23.607,false,true,"/scrypt_check (318,407)"
"tests (426, 477)",0.000,1.000,0.000,0.000,false,false,"/tests (426,477)"
"test_scrypt (480, 488)",0.889,0.889,1.000,0.000,false,false,"/test_scrypt (480,488)"
"test_scrypt_simple (490, 518)",3.304,0.826,4.084,2.783,false,false,"/test_scrypt_simple (490,518)"
"test_scrypt_simple_compact (521, 524)",0.000,1.333,0.000,0.000,false,false,"/test_scrypt_simple_compact (521,524)"
"test_scrypt_simple_expanded (527, 530)",0.000,1.333,0.000,0.000,false,false,"/test_scrypt_simple_expanded (527,530)"
"new (163, 209)",2.483,0.828,3.012,1.333,false,false,"/ScryptParams (152,210)/new (163,209)"
"integerify (118, 126)",0.000,1.800,0.000,0.000,false,true,"/scrypt_ro_mix (117,140)/integerify (118,126)"
sha1.rs,5.288,0.881,6.000,0.424,false,false,src/sha1.rs
"sha1_first (77, 79)",0.000,1.000,0.000,0.000,false,false,"/sha1_first (77,79)"
"sha1_first_add (83, 86)",0.000,1.000,0.000,0.000,false,false,"/sha1_first_add (83,86)"
"sha1msg1 (89, 93)",0.000,1.000,0.000,0.000,false,false,"/sha1msg1 (89,93)"
"sha1msg2 (96, 106)",0.000,1.222,0.000,0.000,false,false,"/sha1msg2 (96,106)"
"sha1_schedule_x4 (109, 111)",0.000,0.000,0.000,0.000,false,false,"/sha1_schedule_x4 (109,111)"
"sha1_first_half (115, 117)",0.000,1.000,0.000,0.000,false,false,"/sha1_first_half (115,117)"
"sha1_digest_round_x4 (121, 134)",0.923,0.923,1.000,0.308,false,false,"/sha1_digest_round_x4 (121,134)"
"sha1rnds4c (137, 159)",0.000,1.353,0.000,0.000,false,false,"/sha1rnds4c (137,159)"
"sha1rnds4p (162, 184)",0.000,1.353,0.000,0.000,false,false,"/sha1rnds4p (162,184)"
"sha1rnds4m (187, 209)",0.000,1.353,0.000,0.000,false,false,"/sha1rnds4m (187,209)"
"sha1_digest_block_u32 (212, 298)",0.000,1.160,0.000,0.000,false,false,"/sha1_digest_block_u32 (212,298)"
"sha1_digest_block (348, 353)",0.000,1.000,0.000,0.000,false,false,"/sha1_digest_block (348,353)"
"add_input (355, 361)",0.000,1.000,0.000,0.000,false,false,"/add_input (355,361)"
"mk_result (363, 379)",1.067,1.067,1.000,0.000,false,false,"/mk_result (363,379)"
"test (435, 522)",4.213,1.053,4.000,0.000,false,false,"/test (435,522)"
"test_1million_random_sha1 (525, 531)",0.000,1.000,0.000,0.000,false,false,"/test_1million_random_sha1 (525,531)"
"sha1_block (542, 549)",0.000,0.000,0.000,0.000,false,false,"/sha1_block (542,549)"
"sha1_10 (552, 559)",0.000,0.000,0.000,0.000,false,false,"/sha1_10 (552,559)"
"sha1_1k (562, 569)",0.000,0.000,0.000,0.000,false,false,"/sha1_1k (562,569)"
"sha1_64k (572, 579)",0.000,0.000,0.000,0.000,false,false,"/sha1_64k (572,579)"
"<anonymous> (575, 577)",0.000,0.000,0.000,0.000,false,false,"/sha1_64k (572,579)/<anonymous> (575,577)"
"<anonymous> (565, 567)",0.000,0.000,0.000,0.000,false,false,"/sha1_1k (562,569)/<anonymous> (565,567)"
"<anonymous> (555, 557)",0.000,0.000,0.000,0.000,false,false,"/sha1_10 (552,559)/<anonymous> (555,557)"
"<anonymous> (545, 547)",0.000,0.000,0.000,0.000,false,false,"/sha1_block (542,549)/<anonymous> (545,547)"
"reset (405, 414)",0.000,1.000,0.000,0.000,false,false,"/Sha1 (404,419)/reset (405,414)"
"input (415, 415)",0.000,1.000,0.000,0.000,false,false,"/Sha1 (404,419)/input (415,415)"
"result (416, 416)",0.000,1.000,0.000,0.000,false,false,"/Sha1 (404,419)/result (416,416)"
"output_bits (417, 417)",0.000,1.000,0.000,0.000,false,false,"/Sha1 (404,419)/output_bits (417,417)"
"block_size (418, 418)",0.000,1.000,0.000,0.000,false,false,"/Sha1 (404,419)/block_size (418,418)"
"new (392, 401)",0.000,1.000,0.000,0.000,false,false,"/Sha1 (390,402)/new (392,401)"
"<anonymous> (366, 366)",0.000,1.000,0.000,0.000,false,false,"/mk_result (363,379)/<anonymous> (366,366)"
"<anonymous> (360, 360)",0.000,1.000,0.000,0.000,false,false,"/add_input (355,361)/<anonymous> (360,360)"
sha2.rs,5.298,0.757,7.001,0.733,false,false,src/sha2.rs
"sha256load (86, 88)",0.000,1.000,0.000,0.000,false,false,"/sha256load (86,88)"
"sha256swap (92, 94)",0.000,1.000,0.000,0.000,false,false,"/sha256swap (92,94)"
"sha256msg1 (98, 109)",0.000,1.333,0.000,0.000,false,false,"/sha256msg1 (98,109)"
"sha256msg2 (113, 128)",0.000,1.333,0.000,0.000,false,false,"/sha256msg2 (113,128)"
"sha256_schedule_x4 (131, 133)",0.000,0.000,0.000,0.000,false,false,"/sha256_schedule_x4 (131,133)"
"sha256_digest_round_x2 (137, 171)",0.000,1.250,0.000,0.000,false,false,"/sha256_digest_round_x2 (137,171)"
"sha256_digest_block_u32 (174, 258)",0.000,1.090,0.000,0.000,false,false,"/sha256_digest_block_u32 (174,258)"
"sha256_digest_block (351, 356)",0.000,1.000,0.000,0.000,false,false,"/sha256_digest_block (351,356)"
"sha512load (360, 362)",0.000,1.000,0.000,0.000,false,false,"/sha512load (360,362)"
"sha512_schedule_x2 (365, 386)",0.000,1.467,0.000,0.000,false,false,"/sha512_schedule_x2 (365,386)"
"sha512_digest_round (389, 417)",0.000,1.208,0.000,0.000,false,false,"/sha512_digest_round (389,417)"
"sha512_digest_block_u64 (420, 541)",0.000,1.130,0.000,0.000,false,false,"/sha512_digest_block_u64 (420,541)"
"sha512_digest_block (638, 643)",0.000,1.000,0.000,0.000,false,false,"/sha512_digest_block (638,643)"
"test_hash (1210, 1236)",3.800,0.950,4.000,0.000,false,false,"/test_hash (1210,1236)"
"test_sha512 (1239, 1261)",0.000,1.211,0.000,0.000,false,false,"/test_sha512 (1239,1261)"
"test_sha384 (1264, 1286)",0.000,1.211,0.000,0.000,false,false,"/test_sha384 (1264,1286)"
"test_sha512_256 (1289, 1311)",0.000,1.211,0.000,0.000,false,false,"/test_sha512_256 (1289,1311)"
"test_sha512_224 (1314, 1336)",0.000,1.211,0.000,0.000,false,false,"/test_sha512_224 (1314,1336)"
"test_sha256 (1339, 1361)",0.000,1.211,0.000,0.000,false,false,"/test_sha256 (1339,1361)"
"test_sha224 (1364, 1386)",0.000,1.211,0.000,0.000,false,false,"/test_sha224 (1364,1386)"
"test_1million_random_sha512 (1389, 1395)",0.000,1.000,0.000,0.000,false,false,"/test_1million_random_sha512 (1389,1395)"
"test_1million_random_sha256 (1398, 1404)",0.000,1.000,0.000,0.000,false,false,"/test_1million_random_sha256 (1398,1404)"
"sha256_block (1417, 1424)",0.000,0.000,0.000,0.000,false,false,"/sha256_block (1417,1424)"
"sha512_block (1427, 1434)",0.000,0.000,0.000,0.000,false,false,"/sha512_block (1427,1434)"
"sha256_10 (1437, 1444)",0.000,0.000,0.000,0.000,false,false,"/sha256_10 (1437,1444)"
"sha256_1k (1447, 1454)",0.000,0.000,0.000,0.000,false,false,"/sha256_1k (1447,1454)"
"sha256_64k (1457, 1464)",0.000,0.000,0.000,0.000,false,false,"/sha256_64k (1457,1464)"
"sha512_10 (1467, 1474)",0.000,0.000,0.000,0.000,false,false,"/sha512_10 (1467,1474)"
"sha512_1k (1477, 1484)",0.000,0.000,0.000,0.000,false,false,"/sha512_1k (1477,1484)"
"sha512_64k (1487, 1494)",0.000,0.000,0.000,0.000,false,false,"/sha512_64k (1487,1494)"
"<anonymous> (1490, 1492)",0.000,0.000,0.000,0.000,false,false,"/sha512_64k (1487,1494)/<anonymous> (1490,1492)"
"<anonymous> (1480, 1482)",0.000,0.000,0.000,0.000,false,false,"/sha512_1k (1477,1484)/<anonymous> (1480,1482)"
"<anonymous> (1470, 1472)",0.000,0.000,0.000,0.000,false,false,"/sha512_10 (1467,1474)/<anonymous> (1470,1472)"
"<anonymous> (1460, 1462)",0.000,0.000,0.000,0.000,false,false,"/sha256_64k (1457,1464)/<anonymous> (1460,1462)"
"<anonymous> (1450, 1452)",0.000,0.000,0.000,0.000,false,false,"/sha256_1k (1447,1454)/<anonymous> (1450,1452)"
"<anonymous> (1440, 1442)",0.000,0.000,0.000,0.000,false,false,"/sha256_10 (1437,1444)/<anonymous> (1440,1442)"
"<anonymous> (1430, 1432)",0.000,0.000,0.000,0.000,false,false,"/sha512_block (1427,1434)/<anonymous> (1430,1432)"
"<anonymous> (1420, 1422)",0.000,0.000,0.000,0.000,false,false,"/sha256_block (1417,1424)/<anonymous> (1420,1422)"
"input (1163, 1165)",0.000,1.000,0.000,0.000,false,false,"/Sha224 (1162,1185)/input (1163,1165)"
"result (1167, 1176)",0.000,1.000,0.000,0.000,false,false,"/Sha224 (1162,1185)/result (1167,1176)"
"reset (1178, 1180)",0.000,1.000,0.000,0.000,false,false,"/Sha224 (1162,1185)/reset (1178,1180)"
"output_bits (1182, 1182)",0.000,1.000,0.000,0.000,false,false,"/Sha224 (1162,1185)/output_bits (1182,1182)"
"block_size (1184, 1184)",0.000,0.000,0.000,0.000,false,false,"/Sha224 (1162,1185)/block_size (1184,1184)"
"new (1155, 1159)",0.000,1.000,0.000,0.000,false,false,"/Sha224 (1151,1160)/new (1155,1159)"
"input (1107, 1109)",0.000,1.000,0.000,0.000,false,false,"/Sha256 (1106,1131)/input (1107,1109)"
"result (1111, 1122)",0.000,1.091,0.000,0.000,false,false,"/Sha256 (1106,1131)/result (1111,1122)"
"reset (1124, 1126)",0.000,1.000,0.000,0.000,false,false,"/Sha256 (1106,1131)/reset (1124,1126)"
"output_bits (1128, 1128)",0.000,1.000,0.000,0.000,false,false,"/Sha256 (1106,1131)/output_bits (1128,1128)"
"block_size (1130, 1130)",0.000,1.000,0.000,0.000,false,false,"/Sha256 (1106,1131)/block_size (1130,1130)"
"new (1099, 1103)",0.000,1.000,0.000,0.000,false,false,"/Sha256 (1095,1104)/new (1099,1103)"
"new (1049, 1056)",0.000,1.000,0.000,0.000,false,false,"/Engine256 (1048,1086)/new (1049,1056)"
"reset (1058, 1063)",0.000,1.000,0.000,0.000,false,false,"/Engine256 (1048,1086)/reset (1058,1063)"
"input (1065, 1071)",0.000,1.000,0.000,0.000,false,false,"/Engine256 (1048,1086)/input (1065,1071)"
"finish (1073, 1085)",1.091,1.091,1.000,0.308,false,false,"/Engine256 (1048,1086)/finish (1073,1085)"
"<anonymous> (1079, 1079)",0.000,1.000,0.000,0.000,false,false,"/Engine256 (1048,1086)/finish (1073,1085)/<anonymous> (1079,1079)"
"<anonymous> (1070, 1070)",0.000,1.000,0.000,0.000,false,false,"/Engine256 (1048,1086)/input (1065,1071)/<anonymous> (1070,1070)"
"new (983, 987)",0.000,1.000,0.000,0.000,false,false,"/Engine256State (982,996)/new (983,987)"
"reset (989, 991)",0.000,1.000,0.000,0.000,false,false,"/Engine256State (982,996)/reset (989,991)"
"process_block (993, 995)",0.000,1.000,0.000,0.000,false,false,"/Engine256State (982,996)/process_block (993,995)"
"input (941, 943)",0.000,1.000,0.000,0.000,false,false,"/Sha512Trunc224 (940,961)/input (941,943)"
"result (945, 952)",0.000,1.143,0.000,0.000,false,false,"/Sha512Trunc224 (940,961)/result (945,952)"
"reset (954, 956)",0.000,1.000,0.000,0.000,false,false,"/Sha512Trunc224 (940,961)/reset (954,956)"
"output_bits (958, 958)",0.000,1.000,0.000,0.000,false,false,"/Sha512Trunc224 (940,961)/output_bits (958,958)"
"block_size (960, 960)",0.000,0.000,0.000,0.000,false,false,"/Sha512Trunc224 (940,961)/block_size (960,960)"
"new (933, 937)",0.000,1.000,0.000,0.000,false,false,"/Sha512Trunc224 (929,938)/new (933,937)"
"input (889, 891)",0.000,1.000,0.000,0.000,false,false,"/Sha512Trunc256 (888,909)/input (889,891)"
"result (893, 900)",0.000,1.143,0.000,0.000,false,false,"/Sha512Trunc256 (888,909)/result (893,900)"
"reset (902, 904)",0.000,1.000,0.000,0.000,false,false,"/Sha512Trunc256 (888,909)/reset (902,904)"
"output_bits (906, 906)",0.000,1.000,0.000,0.000,false,false,"/Sha512Trunc256 (888,909)/output_bits (906,906)"
"block_size (908, 908)",0.000,0.000,0.000,0.000,false,false,"/Sha512Trunc256 (888,909)/block_size (908,908)"
"new (881, 885)",0.000,1.000,0.000,0.000,false,false,"/Sha512Trunc256 (877,886)/new (881,885)"
"input (835, 837)",0.000,1.000,0.000,0.000,false,false,"/Sha384 (834,857)/input (835,837)"
"result (839, 848)",0.000,1.111,0.000,0.000,false,false,"/Sha384 (834,857)/result (839,848)"
"reset (850, 852)",0.000,1.000,0.000,0.000,false,false,"/Sha384 (834,857)/reset (850,852)"
"output_bits (854, 854)",0.000,1.000,0.000,0.000,false,false,"/Sha384 (834,857)/output_bits (854,854)"
"block_size (856, 856)",0.000,0.000,0.000,0.000,false,false,"/Sha384 (834,857)/block_size (856,856)"
"new (827, 831)",0.000,1.000,0.000,0.000,false,false,"/Sha384 (823,832)/new (827,831)"
"input (779, 781)",0.000,1.000,0.000,0.000,false,false,"/Sha512 (778,803)/input (779,781)"
"result (783, 794)",0.000,1.091,0.000,0.000,false,false,"/Sha512 (778,803)/result (783,794)"
"reset (796, 798)",0.000,1.000,0.000,0.000,false,false,"/Sha512 (778,803)/reset (796,798)"
"output_bits (800, 800)",0.000,1.000,0.000,0.000,false,false,"/Sha512 (778,803)/output_bits (800,800)"
"block_size (802, 802)",0.000,0.000,0.000,0.000,false,false,"/Sha512 (778,803)/block_size (802,802)"
"new (771, 775)",0.000,1.000,0.000,0.000,false,false,"/Sha512 (767,776)/new (771,775)"
"new (717, 724)",0.000,1.000,0.000,0.000,false,false,"/Engine512 (716,758)/new (717,724)"
"reset (726, 731)",0.000,1.000,0.000,0.000,false,false,"/Engine512 (716,758)/reset (726,731)"
"input (733, 739)",0.000,1.000,0.000,0.000,false,false,"/Engine512 (716,758)/input (733,739)"
"finish (741, 757)",2.133,1.067,2.001,0.471,false,false,"/Engine512 (716,758)/finish (741,757)"
"<anonymous> (747, 747)",0.000,1.000,0.000,0.000,false,false,"/Engine512 (716,758)/finish (741,757)/<anonymous> (747,747)"
"<anonymous> (738, 738)",0.000,1.000,0.000,0.000,false,false,"/Engine512 (716,758)/input (733,739)/<anonymous> (738,738)"
"new (653, 657)",0.000,1.000,0.000,0.000,false,false,"/Engine512State (652,666)/new (653,657)"
"reset (659, 661)",0.000,1.000,0.000,0.000,false,false,"/Engine512State (652,666)/reset (659,661)"
"process_block (663, 665)",0.000,1.000,0.000,0.000,false,false,"/Engine512State (652,666)/process_block (663,665)"
"sigma0 (368, 370)",0.000,1.000,0.000,0.000,false,false,"/sha512_schedule_x2 (365,386)/sigma0 (368,370)"
"sigma1 (373, 375)",0.000,1.000,0.000,0.000,false,false,"/sha512_schedule_x2 (365,386)/sigma1 (373,375)"
"sigma0x4 (102, 106)",0.000,1.000,0.000,0.000,false,false,"/sha256msg1 (98,109)/sigma0x4 (102,106)"
sha3.rs,58.023,0.994,59.001,1.665,false,true,src/sha3.rs
"rotl64 (96, 98)",0.000,1.000,0.000,0.000,false,false,"/rotl64 (96,98)"
"keccak_f (101, 145)",16.941,1.882,18.000,0.000,false,true,"/keccak_f (101,145)"
"test_hash (469, 501)",4.348,1.087,4.000,0.000,false,false,"/test_hash (469,501)"
"test_keccak_224 (504, 515)",0.000,1.200,0.000,0.000,false,false,"/test_keccak_224 (504,515)"
"test_keccak_256 (518, 537)",0.000,1.111,0.000,0.000,false,false,"/test_keccak_256 (518,537)"
"test_keccak_384 (540, 551)",0.000,1.200,0.000,0.000,false,false,"/test_keccak_384 (540,551)"
"test_keccak_512 (554, 565)",0.000,1.200,0.000,0.000,false,false,"/test_keccak_512 (554,565)"
"test_sha3_224 (568, 1599)",0.000,1.002,0.000,0.000,false,false,"/test_sha3_224 (568,1599)"
"test_sha3_256 (1602, 2633)",0.000,1.002,0.000,0.000,false,false,"/test_sha3_256 (1602,2633)"
"test_sha3_384 (2636, 3667)",0.000,1.002,0.000,0.000,false,false,"/test_sha3_384 (2636,3667)"
"test_sha3_512 (3670, 4701)",0.000,1.002,0.000,0.000,false,false,"/test_sha3_512 (3670,4701)"
"test_sha3_shake128 (4704, 5735)",0.000,1.002,0.000,0.000,false,false,"/test_sha3_shake128 (4704,5735)"
"test_sha3_shake256 (5738, 6769)",0.000,1.002,0.000,0.000,false,false,"/test_sha3_shake256 (5738,6769)"
"clone (451, 453)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (450,454)/clone (451,453)"
"input (347, 375)",6.261,1.043,6.002,0.960,false,false,"/Sha3 (346,444)/input (347,375)"
"result (377, 427)",14.829,1.854,16.100,4.683,false,true,"/Sha3 (346,444)/result (377,427)"
"reset (429, 435)",0.000,1.167,0.000,0.000,false,false,"/Sha3 (346,444)/reset (429,435)"
"output_bits (437, 439)",0.000,1.000,0.000,0.000,false,false,"/Sha3 (346,444)/output_bits (437,439)"
"block_size (441, 443)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (346,444)/block_size (441,443)"
"new (218, 226)",0.000,1.000,0.000,0.000,false,false,"/Sha3 (216,344)/new (218,226)"
"sha3_224 (229, 231)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/sha3_224 (229,231)"
"sha3_256 (234, 236)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/sha3_256 (234,236)"
"sha3_384 (239, 241)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/sha3_384 (239,241)"
"sha3_512 (244, 246)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/sha3_512 (244,246)"
"shake_128 (249, 251)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/shake_128 (249,251)"
"shake_256 (254, 256)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/shake_256 (254,256)"
"keccak224 (259, 261)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/keccak224 (259,261)"
"keccak256 (264, 266)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/keccak256 (264,266)"
"keccak384 (269, 271)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/keccak384 (269,271)"
"keccak512 (274, 276)",0.000,0.000,0.000,0.000,false,false,"/Sha3 (216,344)/keccak512 (274,276)"
"finalize (278, 339)",11.673,1.061,11.000,0.000,false,false,"/Sha3 (216,344)/finalize (278,339)"
"rate (341, 343)",0.000,1.000,0.000,0.000,false,false,"/Sha3 (216,344)/rate (341,343)"
"set_domain_sep (291, 301)",3.667,1.222,3.000,0.000,false,false,"/Sha3 (216,344)/finalize (278,339)/set_domain_sep (291,301)"
"pad_len (304, 311)",0.000,1.000,0.000,0.000,false,false,"/Sha3 (216,344)/finalize (278,339)/pad_len (304,311)"
"set_pad (313, 325)",4.000,1.000,4.000,0.000,false,false,"/Sha3 (216,344)/finalize (278,339)/set_pad (313,325)"
"digest_length (167, 175)",0.889,0.889,1.000,0.000,false,false,"/Sha3Mode (164,204)/digest_length (167,175)"
"is_shake (178, 183)",0.000,0.000,2.000,4.000,false,false,"/Sha3Mode (164,204)/is_shake (178,183)"
"is_keccak (186, 191)",0.833,0.833,1.000,0.000,false,false,"/Sha3Mode (164,204)/is_keccak (186,191)"
"capacity (194, 203)",0.900,0.900,1.000,0.000,false,false,"/Sha3Mode (164,204)/capacity (194,203)"
simd.rs,0.844,0.422,2.015,1.244,false,false,src/simd.rs
"add (117, 119)",0.000,1.000,0.000,0.000,false,false,"/u64x2 (114,120)/add (117,119)"
"shr (105, 107)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (102,108)/shr (105,107)"
"shr (97, 99)",0.000,0.000,0.000,0.000,false,false,"/u32x4 (94,100)/shr (97,99)"
"shl (89, 91)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (86,92)/shl (89,91)"
"shl (81, 83)",0.000,0.000,0.000,0.000,false,false,"/u32x4 (78,84)/shl (81,83)"
"bitxor (73, 75)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (70,76)/bitxor (73,75)"
"bitor (65, 67)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (62,68)/bitor (65,67)"
"bitand (57, 59)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (54,60)/bitand (57,59)"
"sub (45, 51)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (42,52)/sub (45,51)"
"add (33, 39)",0.000,1.000,0.000,0.000,false,false,"/u32x4 (30,40)/add (33,39)"
"simd_eq (14, 20)",1.429,0.714,2.000,0.000,false,false,"/fake::u32x4 (13,21)/simd_eq (14,20)"
sosemanuk.rs,24.667,1.114,26.000,0.462,false,false,src/sosemanuk.rs
"key_setup (599, 1487)",2.002,1.001,2.000,0.000,false,false,"/key_setup (599,1487)"
"iv_setup (1489, 2303)",1.988,0.994,2.000,0.010,false,false,"/iv_setup (1489,2303)"
"test_sosemanuk_ecrypt_set_1_vector_0 (2339, 2353)",0.000,1.250,0.000,0.000,false,false,"/test_sosemanuk_ecrypt_set_1_vector_0 (2339,2353)"
"test_sosemanuk_ecrypt_set_2_vector_63 (2356, 2370)",0.000,1.250,0.000,0.000,false,false,"/test_sosemanuk_ecrypt_set_2_vector_63 (2356,2370)"
"test_sosemanuk_ecrypt_set_2_vector_90 (2373, 2387)",0.000,1.250,0.000,0.000,false,false,"/test_sosemanuk_ecrypt_set_2_vector_90 (2373,2387)"
"test_sosemanuk_ecrypt_set_3_vector_135 (2390, 2404)",0.000,1.250,0.000,0.000,false,false,"/test_sosemanuk_ecrypt_set_3_vector_135 (2390,2404)"
"test_sosemanuk_ecrypt_set_3_vector_207 (2407, 2421)",0.000,1.250,0.000,0.000,false,false,"/test_sosemanuk_ecrypt_set_3_vector_207 (2407,2421)"
"test_sosemanuk_ecrypt_set_6_vector_3 (2424, 2438)",0.000,1.250,0.000,0.000,false,false,"/test_sosemanuk_ecrypt_set_6_vector_3 (2424,2438)"
"test_sosemanuk_vector128_test1 (2443, 2457)",0.000,1.250,0.000,0.000,false,false,"/test_sosemanuk_vector128_test1 (2443,2457)"
"test_sosemanuk_vector128_test2 (2460, 2474)",0.000,1.250,0.000,0.000,false,false,"/test_sosemanuk_vector128_test2 (2460,2474)"
"sosemanuk_10 (2484, 2492)",0.000,0.000,0.000,0.000,false,false,"/sosemanuk_10 (2484,2492)"
"sosemanuk_1k (2495, 2503)",0.000,0.000,0.000,0.000,false,false,"/sosemanuk_1k (2495,2503)"
"sosemanuk_64k (2506, 2514)",0.000,0.000,0.000,0.000,false,false,"/sosemanuk_64k (2506,2514)"
"<anonymous> (2510, 2512)",0.000,0.000,0.000,0.000,false,false,"/sosemanuk_64k (2506,2514)/<anonymous> (2510,2512)"
"<anonymous> (2499, 2501)",0.000,0.000,0.000,0.000,false,false,"/sosemanuk_1k (2495,2503)/<anonymous> (2499,2501)"
"<anonymous> (2488, 2490)",0.000,0.000,0.000,0.000,false,false,"/sosemanuk_10 (2484,2492)/<anonymous> (2488,2490)"
"decrypt (2323, 2326)",0.000,0.000,0.000,0.000,false,false,"/Sosemanuk (2322,2327)/decrypt (2323,2326)"
"encrypt (2316, 2319)",0.000,0.000,0.000,0.000,false,false,"/Sosemanuk (2315,2320)/encrypt (2316,2319)"
"process (2307, 2312)",1.000,1.000,1.000,0.000,false,false,"/Sosemanuk (2306,2313)/process (2307,2312)"
"new (164, 174)",0.000,1.250,0.000,0.000,false,false,"/Sosemanuk (163,596)/new (164,174)"
"advance_state (176, 586)",23.769,2.377,20.000,0.000,false,true,"/Sosemanuk (163,596)/advance_state (176,586)"
"next (588, 595)",1.000,1.000,1.000,0.000,false,false,"/Sosemanuk (163,596)/next (588,595)"
"clone (161, 161)",0.000,0.000,0.000,0.000,false,false,"/Sosemanuk (161,161)/clone (161,161)"
step_by.rs,0.824,0.412,2.001,0.533,false,false,src/step_by.rs
"step_up (42, 48)",0.000,1.000,0.000,0.000,false,false,"/Range<T> (40,49)/step_up (42,48)"
"next (25, 33)",1.556,0.778,2.000,0.000,false,false,"/StepUp<T> (20,34)/next (25,33)"
symmetriccipher.rs,0.000,0.000,6.000,8.000,false,false,examples/symmetriccipher.rs
"encrypt (17, 73)",0.000,0.000,2.000,4.000,false,false,"/encrypt (17,73)"
"decrypt (82, 104)",0.000,0.000,2.000,4.000,false,false,"/decrypt (82,104)"
"main (106, 126)",0.000,0.000,0.000,0.000,false,false,"/main (106,126)"
"<anonymous> (96, 96)",0.000,0.000,0.000,0.000,false,false,"/decrypt (82,104)/<anonymous> (96,96)"
"<anonymous> (64, 64)",0.000,0.000,0.000,0.000,false,false,"/encrypt (17,73)/<anonymous> (64,64)"
symmetriccipher.rs,0.000,0.077,0.000,0.000,false,false,src/symmetriccipher.rs
"decrypt (66, 69)",0.000,0.000,0.000,0.000,false,false,"/Box<SynchronousStreamCipher + 'static> (65,70)/decrypt (66,69)"
"encrypt (59, 62)",0.000,0.000,0.000,0.000,false,false,"/Box<SynchronousStreamCipher + 'static> (58,63)/encrypt (59,62)"
"process (52, 55)",0.000,1.000,0.000,0.000,false,false,"/Box<SynchronousStreamCipher + 'static> (51,56)/process (52,55)"
util.rs,1.290,0.645,2.000,0.195,false,false,src/util.rs
"supports_aesni (15, 19)",0.000,1.000,0.000,0.000,false,false,"/supports_aesni (15,19)"
"secure_memset (32, 39)",0.000,1.000,0.000,0.000,false,false,"/secure_memset (32,39)"
"fixed_time_eq (43, 55)",1.500,0.750,2.004,0.800,false,false,"/fixed_time_eq (43,55)"
"test_fixed_time_eq (62, 79)",0.000,1.062,0.000,0.000,false,false,"/test_fixed_time_eq (62,79)"
whirlpool.rs,4.532,0.206,22.008,2.271,false,false,src/whirlpool.rs
"process_buffer (152, 204)",10.560,0.960,11.000,0.000,false,false,"/process_buffer (152,204)"
"whirlpool_static_test (234, 244)",0.909,0.909,1.000,0.000,false,false,"/whirlpool_static_test (234,244)"
"whirlpool_1000000a_test (247, 259)",1.083,1.083,1.000,0.000,false,false,"/whirlpool_1000000a_test (247,259)"
"input (62, 102)",6.375,1.062,6.000,0.000,false,false,"/Whirlpool (61,150)/input (62,102)"
"result (104, 134)",3.375,1.125,3.000,0.000,false,false,"/Whirlpool (61,150)/result (104,134)"
"reset (136, 141)",0.000,1.000,0.000,0.000,false,false,"/Whirlpool (61,150)/reset (136,141)"
"output_bits (143, 145)",0.000,1.000,0.000,0.000,false,false,"/Whirlpool (61,150)/output_bits (143,145)"
"block_size (147, 149)",0.000,0.000,0.000,0.000,false,false,"/Whirlpool (61,150)/block_size (147,149)"
"<anonymous> (111, 111)",0.000,1.000,0.000,0.000,false,false,"/Whirlpool (61,150)/result (104,134)/<anonymous> (111,111)"
"<anonymous> (121, 121)",0.000,1.000,0.000,0.000,false,false,"/Whirlpool (61,150)/result (104,134)/<anonymous> (121,121)"
"<anonymous> (101, 101)",0.000,1.000,0.000,0.000,false,false,"/Whirlpool (61,150)/input (62,102)/<anonymous> (101,101)"
"new (51, 58)",0.000,1.000,0.000,0.000,false,false,"/Whirlpool (50,59)/new (51,58)"
PROJECT,31.549,0.823,768.198,100.446,false,false,-
AVG,13.265,0.704,18.827,4.769,false,false,-
MAX,81.019,2.522,125.606,36.917,false,false,-
MIN,0.000,0.000,0.000,0.000,false,false,-
PROJECT_COVERAGE,96.640,-,-,-,-,-,-
LIST OF COMPLEX FUNCTIONS,----------,----------,----------,----------,----------,----------,----------
"process (215, 400)",32.667,1.167,60.449,32.990,false,true,"/BlockEngine<P, X> (107,417)/process (215,400)"
"slide (1156, 1185)",25.655,1.655,31.000,0.000,false,true,"/GeP2 (1124,1244)/slide (1156,1185)"
"advance_state (176, 586)",23.769,2.377,20.000,0.000,false,true,"/Sosemanuk (163,596)/advance_state (176,586)"
"scrypt_check (318, 407)",21.940,1.463,36.852,23.607,false,true,"/scrypt_check (318,407)"
"keccak_f (101, 145)",16.941,1.882,18.000,0.000,false,true,"/keccak_f (101,145)"
"result (377, 427)",14.829,1.854,16.100,4.683,false,true,"/Sha3 (346,444)/result (377,427)"
"shift_row (1137, 1146)",0.000,1.667,0.000,0.000,false,true,"/u16 (1136,1170)/shift_row (1137,1146)"
"inv_shift_row (1148, 1157)",0.000,1.667,0.000,0.000,false,true,"/u16 (1136,1170)/inv_shift_row (1148,1157)"
"get_test_vectors (132, 735)",0.000,5.593,0.000,0.000,false,true,"/get_test_vectors (132,735)"
"invert (946, 1018)",0.000,2.808,0.000,0.000,false,true,"/Fe (403,1063)/invert (946,1018)"
"exchange (132, 151)",0.000,1.538,0.000,0.000,false,true,"/exchange (132,151)"
"integerify (118, 126)",0.000,1.800,0.000,0.000,false,true,"/scrypt_ro_mix (117,140)/integerify (118,126)"
TOTAL COMPLEX FUNCTIONS,12,,,,,,
LIST OF IGNORED FILES,----------,----------,----------,----------,----------,----------,----------
../rust-crypto/src/aead.rs,0.000,0.000,0.000,0.000,true,-,-
../rust-crypto/src/aesni_helpers.c,0.000,0.000,0.000,0.000,true,-,-
../rust-crypto/src/util_helpers.c,0.000,0.000,0.000,0.000,true,-,-
TOTAL FILES IGNORED,3,,,,,,
